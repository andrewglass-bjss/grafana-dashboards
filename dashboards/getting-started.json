{"meta":{"type":"db","canSave":true,"canEdit":true,"canStar":true,"slug":"getting-started","expires":"0001-01-01T00:00:00Z","created":"2016-07-20T09:41:44Z","updated":"2018-06-14T13:26:14Z","updatedBy":"ops-contact@gitlab.com","createdBy":"ops-contact@gitlab.com","version":2},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"-- Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations \u0026 Alerts","type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"hideControls":false,"id":null,"links":[{"icon":"external link","tags":[],"title":"Configuring Grafana","tooltip":"","type":"link","url":"http://docs.gitlab.com/ce/monitoring/performance/grafana_configuration.html"},{"icon":"external link","tags":[],"title":"Getting Started With Grafana","type":"link","url":"docs.grafana.org/guides/gettingstarted/"},{"icon":"external link","tags":[],"title":"InfluxDB Documentation","type":"link","url":"https://docs.influxdata.com/influxdb/latest"}],"refresh":false,"rows":[{"collapse":false,"height":"250px","panels":[{"content":"# Welcome\n\nWelcome to Grafana. The dashboards available in this installation can be used to visualise data gathered by GitLab Performance Monitoring. For example, you can see how much time is spent in certain Rails controllers or how the garbage collector is behaving.\n\nThis particular dashboard acts as a way of helping you get started with Grafana and the dashboards provided by GitLab. First of all make sure that Grafana is configured properly as otherwise you won't be able to visualise any data. Information on configuring Grafana can be found at \u003chttp://docs.gitlab.com/ce/monitoring/performance/grafana_configuration.html\u003e.","editable":true,"error":false,"id":1,"links":[],"mode":"markdown","span":6,"title":"Welcome","transparent":true,"type":"text"},{"content":"# Available Dashboards\n\nGitLab provides quite a few dashboards out of the box, too many to all list here. However, some of the most useful ones are:\n\n* [Rails Controllers](/dashboard/db/rails-controllers): displays information about Rails controllers such as the time per request, the number of SQL queries executed, the time spent in Git, etc.\n* [Sidekiq Workers](/dashboard/db/sidekiq-workers): displays information about Sidekiq workers such as the time per job, the number of SQL queries, the time spent in Git, etc.\n* [Grape Endpoints](/dashboard/db/grape-endpoints): displays information about Grape endpoints  such as the time per request, the number of SQL queries executed, the time spent in Git, etc.\n* [Method Call Timings](/dashboard/db/method-call-timings): displays timing information of individual methods\n* [Garbage Collector](/dashboard/db/garbage-collector): displays information about the Ruby garbage collector\n\nBesides these dashboards there are plenty of others available. ","editable":true,"error":false,"id":2,"links":[],"mode":"markdown","span":6,"title":"Available Dashboards","transparent":true,"type":"text"}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":false,"title":"Introduction","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"content":"# Creating Dashboards\n\nIn the event of the built-in dashboards not providing enough data you can create your own dashboards. Before you start creating dashboards it's recommended that you have read the [Grafana Getting Started guide](http://docs.grafana.org/guides/gettingstarted/).\n\n## Retention Policies\n\nWhen using GitLab Performance Monitoring with the InfluxDB configuration as provided by GitLab your database will contain two retention policies. Retention policies are used to determine how long data has to stick around before it's automatically removed from the database. Currently two retention policies are used:\n\n* `default`: the default retention policy, data using this policy will be removed 1 hour after being created.\n* `downsampled`: all data using this retention policy is grouped per minute and will be removed automatically 7 days after creation.\n\nThese retention policies are used to ensure that one can query large amounts of data without the database size growing indefinitely.\n\n## Writing Queries\n\nWhen writing queries it's generally advised to use the `downsampled` retention policy as querying data using this policy is faster and the data stays around for more than 1 hour. Queries are generally in the following format:\n\n    SELECT X, Y, Z FROM downsampled.MEASUREMENT_NAME WHERE $timeFilter [GROUP BY time($interval)]\n\nHere the GROUP BY is optional, usually it's not needed. Queries don't need to end with a semicolon **unless** you want to visualise multiple queries in the same graph. Grafana also lets you embed variables in a query. For example, here `$timeFilter` is a variable that's replaced with the currently selected time range.\n\nLets take a look at an example query to see how this works:\n\n    SELECT \"count\" as \"Amount\" FROM downsampled.web_transaction_counts_overall WHERE $timeFilter;\n\nThis query is used to plot the total number of web requests per minute. The result of this query can be seen below.","editable":true,"error":false,"id":3,"links":[],"mode":"markdown","span":12,"title":"Creating Dashboards","transparent":true,"type":"text"},{"aliasColors":{"Amount":"#9AC48A"},"bars":false,"dashLength":10,"dashes":false,"datasource":null,"editable":true,"error":false,"fill":0,"grid":{},"id":5,"interval":"1m","legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"connected","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":12,"stack":true,"steppedLine":false,"targets":[{"alias":"$col","dsType":"influxdb","groupBy":[{"params":["auto"],"type":"time"}],"hide":false,"measurement":"transactions","policy":"default","query":"SELECT \"count\" as \"Amount\" FROM downsampled.web_transaction_counts_overall WHERE $timeFilter;","rawQuery":true,"refId":"A","resultFormat":"time_series","select":[[{"params":["id"],"type":"field"},{"params":[],"type":"count"}]],"tags":[]}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Transactions (web)","tooltip":{"msResolution":false,"shared":true,"sort":0,"value_type":"cumulative"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":"","logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":"","logBase":1,"max":null,"min":null,"show":true}]},{"content":"# Available Measurements\n\nThere are a lot of measurements available from which one can get data. An up to date list is best extracted from InfluxDB directly. To do so, open an InfluxDB shell and run the following command:\n\n    show measurements\n\nThe output of this command can also be seen to the right.\n\n","editable":true,"error":false,"id":6,"links":[],"mode":"markdown","span":6,"title":"Measurements","type":"text"},{"columns":[],"datasource":null,"editable":true,"error":false,"fontSize":"100%","id":7,"links":[],"pageSize":null,"scroll":true,"showHeader":true,"sort":{"col":null,"desc":false},"span":6,"styles":[{"dateFormat":"YYYY-MM-DD HH:mm:ss","pattern":"Time","type":"string"}],"targets":[{"alias":"","dsType":"influxdb","groupBy":[{"params":["$interval"],"type":"time"},{"params":["null"],"type":"fill"}],"policy":"default","query":"show measurements","rawQuery":true,"refId":"A","resultFormat":"table","select":[[{"params":["value"],"type":"field"},{"params":[],"type":"mean"}]],"tags":[]}],"title":"Measurements","transform":"table","type":"table"}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":false,"title":"Creating Dashboards","titleSize":"h6"}],"schemaVersion":14,"style":"dark","tags":["help","influxdb"],"templating":{"list":[]},"time":{"from":"now-3h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"utc","title":"Getting Started","version":2}}