{
  "annotations": {
    "list": [
      {
        "datasource": "$database",
        "enable": true,
        "iconColor": "rgb(255, 255, 255)",
        "name": "Deployments",
        "query": "SELECT version FROM forever.deployments"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "hideControls": false,
  "id": null,
  "links": [

  ],
  "rows": [
    {
      "collapse": false,
      "editable": true,
      "height": "250px",
      "panels": [
        {
          "aliasColors": {
            "95th Percentile": "#9AC48A",
            "99th Percentile": "#E24D42",
            "Mean": "#70DBED"
          },
          "bars": false,
          "datasource": "$database",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {
            "threshold1": null,
            "threshold1Color": "rgba(216, 200, 27, 0.27)",
            "threshold2": null,
            "threshold2Color": "rgba(234, 112, 112, 0.22)"
          },
          "height": "",
          "id": 1,
          "interval": "",
          "isNew": true,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [

          ],
          "nullPointMode": "null as zero",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [

          ],
          "span": 6,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col",
              "dsType": "influxdb",
              "groupBy": [
                {
                  "params": [
                    "$interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "policy": "default",
              "query": "SELECT \"duration_95th\" AS \"95th Percentile\", \"duration_99th\" as \"99th Percentile\", \"duration_mean\" AS \"Mean\" FROM downsampled.\"[[process_type]]_method_call_timings_per_method\" WHERE $timeFilter AND \"method\" =~ /^$method$/",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [

                    ],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [

              ]
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Real Time",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 0,
            "value_type": "cumulative"
          },
          "type": "graph",
          "xaxis": {
            "show": true
          },
          "yaxes": [
            {
              "format": "ms",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ]
        },
        {
          "aliasColors": {
            "95th Percentile": "#9AC48A",
            "99th Percentile": "#E24D42",
            "Mean": "#70DBED"
          },
          "bars": false,
          "datasource": "$database",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {
            "threshold1": null,
            "threshold1Color": "rgba(216, 200, 27, 0.27)",
            "threshold2": null,
            "threshold2Color": "rgba(234, 112, 112, 0.22)"
          },
          "height": "",
          "id": 5,
          "interval": "",
          "isNew": true,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [

          ],
          "nullPointMode": "null as zero",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [

          ],
          "span": 6,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col",
              "dsType": "influxdb",
              "groupBy": [
                {
                  "params": [
                    "$interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "policy": "default",
              "query": "SELECT \"cpu_duration_95th\" AS \"95th Percentile\", \"cpu_duration_99th\" as \"99th Percentile\", \"cpu_duration_mean\" AS \"Mean\" FROM downsampled.\"[[process_type]]_method_call_timings_per_method\" WHERE $timeFilter AND \"method\" =~ /^$method$/",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [

                    ],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [

              ]
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "CPU Time",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 0,
            "value_type": "cumulative"
          },
          "type": "graph",
          "xaxis": {
            "show": true
          },
          "yaxes": [
            {
              "format": "ms",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ]
        },
        {
          "aliasColors": {
            "95th Percentile": "#9AC48A",
            "99th Percentile": "#E24D42",
            "Mean": "#70DBED"
          },
          "bars": false,
          "datasource": "$database",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {
            "threshold1": null,
            "threshold1Color": "rgba(216, 200, 27, 0.27)",
            "threshold2": null,
            "threshold2Color": "rgba(234, 112, 112, 0.22)"
          },
          "height": "",
          "id": 7,
          "interval": "",
          "isNew": true,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [

          ],
          "nullPointMode": "null as zero",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [

          ],
          "span": 12,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$col",
              "dsType": "influxdb",
              "groupBy": [
                {
                  "params": [
                    "$interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "policy": "default",
              "query": "SELECT \"call_count_95th\" AS \"95th Percentile\", \"call_count_99th\" as \"99th Percentile\", \"call_count_mean\" AS \"Mean\" FROM downsampled.\"[[process_type]]_method_call_timings_per_method\" WHERE $timeFilter AND \"method\" =~ /^$method$/",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [

                    ],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [

              ]
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Call Counts",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 0,
            "value_type": "cumulative"
          },
          "type": "graph",
          "xaxis": {
            "show": true
          },
          "yaxes": [
            {
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ]
        },
        {
          "aliasColors": {
          },
          "bars": true,
          "datasource": "$database",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {
            "threshold1": null,
            "threshold1Color": "rgba(216, 200, 27, 0.27)",
            "threshold2": null,
            "threshold2Color": "rgba(234, 112, 112, 0.22)"
          },
          "id": 3,
          "interval": "1m",
          "isNew": true,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": false,
          "linewidth": 1,
          "links": [

          ],
          "nullPointMode": "null as zero",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [

          ],
          "span": 6,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_action",
              "dsType": "influxdb",
              "groupBy": [
                {
                  "params": [
                    "$interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "policy": "default",
              "query": "SELECT mean(\"duration_95th\") AS \"95th Percentile\" FROM downsampled.\"[[process_type]]_method_call_timings_per_action_and_method\" WHERE $timeFilter AND \"method\" =~ /^$method$/ GROUP BY \"action\", time($interval)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [

                    ],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [

              ]
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Real Time (95th Percentile) per Action",
          "tooltip": {
            "msResolution": false,
            "shared": false,
            "sort": 0,
            "value_type": "cumulative"
          },
          "type": "graph",
          "xaxis": {
            "show": true
          },
          "yaxes": [
            {
              "format": "ms",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ]
        },
        {
          "aliasColors": {
          },
          "bars": true,
          "datasource": "$database",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {
            "threshold1": null,
            "threshold1Color": "rgba(216, 200, 27, 0.27)",
            "threshold2": null,
            "threshold2Color": "rgba(234, 112, 112, 0.22)"
          },
          "id": 6,
          "interval": "1m",
          "isNew": true,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": false,
          "linewidth": 1,
          "links": [

          ],
          "nullPointMode": "null as zero",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [

          ],
          "span": 6,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_action",
              "dsType": "influxdb",
              "groupBy": [
                {
                  "params": [
                    "$interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "policy": "default",
              "query": "SELECT mean(\"cpu_duration_95th\") AS \"95th Percentile\" FROM downsampled.\"[[process_type]]_method_call_timings_per_action_and_method\" WHERE $timeFilter AND \"method\" =~ /^$method$/ GROUP BY \"action\", time($interval)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [

                    ],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [

              ]
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "CPU Time (95th Percentile) per Action",
          "tooltip": {
            "msResolution": false,
            "shared": false,
            "sort": 0,
            "value_type": "cumulative"
          },
          "type": "graph",
          "xaxis": {
            "show": true
          },
          "yaxes": [
            {
              "format": "ms",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ]
        }
      ],
      "title": "Row"
    },
    {
      "collapse": false,
      "editable": true,
      "height": "",
      "panels": [
        {
          "columns": [

          ],
          "datasource": "$database",
          "editable": true,
          "error": false,
          "fontSize": "100%",
          "height": "800",
          "id": 2,
          "interval": "1m",
          "isNew": true,
          "links": [

          ],
          "pageSize": 100,
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 0,
            "desc": true
          },
          "span": 12,
          "styles": [
            {
              "dateFormat": "HH:MM",
              "pattern": "Time",
              "type": "date"
            },
            {
              "colorMode": "cell",
              "colors": [
                "rgba(50, 172, 45, 0.97)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(245, 54, 54, 0.9)"
              ],
              "decimals": 2,
              "pattern": "95th Percentile",
              "thresholds": [
                "100",
                "150"
              ],
              "type": "number",
              "unit": "ms"
            },
            {
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "pattern": "action",
              "thresholds": [

              ],
              "type": "string",
              "unit": "short"
            }
          ],
          "targets": [
            {
              "alias": "$col",
              "dsType": "influxdb",
              "groupBy": [
                {
                  "params": [
                    "$interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "policy": "default",
              "query": "SELECT percentile(\"duration\", 95) AS \"95th Percentile\" FROM \"[[process_type]]_method_calls\" WHERE $timeFilter AND \"method\" =~ /^$method$/ GROUP BY \"action\" ORDER BY time DESC LIMIT 100",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [

                    ],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [

              ]
            }
          ],
          "title": "Timings per Action",
          "transform": "table",
          "type": "table"
        }
      ],
      "title": "New row"
    }
  ],
  "schemaVersion": 12,
  "sharedCrosshair": false,
  "style": "dark",
  "tags": [
    "method"
  ],
  "templating": {
    "list": [
      {
        "allFormat": "glob",
        "current": {
          "tags": [

          ],
          "text": "rails",
          "value": "rails"
        },
        "datasource": null,
        "hide": 0,
        "includeAll": false,
        "label": "Process Type",
        "multi": false,
        "multiFormat": "glob",
        "name": "process_type",
        "options": [
          {
            "selected": true,
            "text": "rails",
            "value": "rails"
          },
          {
            "selected": false,
            "text": "sidekiq",
            "value": "sidekiq"
          },
          {
            "selected": false,
            "text": "grape",
            "value": "grape"
          }
        ],
        "query": "rails,sidekiq,grape",
        "refresh": 0,
        "type": "custom"
      },
      {
        "allFormat": "glob",
        "current": {
          "text": "Project.find_with_namespace",
          "value": "Project.find_with_namespace"
        },
        "datasource": null,
        "hide": 0,
        "includeAll": false,
        "label": "Method",
        "multi": false,
        "multiFormat": "glob",
        "name": "method",
        "options": [
          {
            "selected": false,
            "text": "AbuseReport#remove_user",
            "value": "AbuseReport#remove_user"
          },
          {
            "selected": false,
            "text": "AccessRequestsFinder#execute",
            "value": "AccessRequestsFinder#execute"
          },
          {
            "selected": false,
            "text": "AccessRequestsFinder#execute!",
            "value": "AccessRequestsFinder#execute!"
          },
          {
            "selected": false,
            "text": "AkismetService#is_spam?",
            "value": "AkismetService#is_spam?"
          },
          {
            "selected": false,
            "text": "AkismetService#submit_ham",
            "value": "AkismetService#submit_ham"
          },
          {
            "selected": false,
            "text": "AsanaService#check_commit",
            "value": "AsanaService#check_commit"
          },
          {
            "selected": false,
            "text": "AuditEventService#for_member",
            "value": "AuditEventService#for_member"
          },
          {
            "selected": false,
            "text": "AuditEventService#security_event",
            "value": "AuditEventService#security_event"
          },
          {
            "selected": false,
            "text": "Auth::ContainerRegistryAuthenticationService#authorized_token",
            "value": "Auth::ContainerRegistryAuthenticationService#authorized_token"
          },
          {
            "selected": false,
            "text": "Auth::ContainerRegistryAuthenticationService#build_can_pull?",
            "value": "Auth::ContainerRegistryAuthenticationService#build_can_pull?"
          },
          {
            "selected": false,
            "text": "Auth::ContainerRegistryAuthenticationService#can_access?",
            "value": "Auth::ContainerRegistryAuthenticationService#can_access?"
          },
          {
            "selected": false,
            "text": "Auth::ContainerRegistryAuthenticationService#execute",
            "value": "Auth::ContainerRegistryAuthenticationService#execute"
          },
          {
            "selected": false,
            "text": "Auth::ContainerRegistryAuthenticationService#process_repository_access",
            "value": "Auth::ContainerRegistryAuthenticationService#process_repository_access"
          },
          {
            "selected": false,
            "text": "Auth::ContainerRegistryAuthenticationService#process_scope",
            "value": "Auth::ContainerRegistryAuthenticationService#process_scope"
          },
          {
            "selected": false,
            "text": "Auth::ContainerRegistryAuthenticationService#scope",
            "value": "Auth::ContainerRegistryAuthenticationService#scope"
          },
          {
            "selected": false,
            "text": "Auth::ContainerRegistryAuthenticationService#user_can_pull?",
            "value": "Auth::ContainerRegistryAuthenticationService#user_can_pull?"
          },
          {
            "selected": false,
            "text": "Auth::ContainerRegistryAuthenticationService#user_can_push?",
            "value": "Auth::ContainerRegistryAuthenticationService#user_can_push?"
          },
          {
            "selected": false,
            "text": "Auth::ContainerRegistryAuthenticationService.full_access_token",
            "value": "Auth::ContainerRegistryAuthenticationService.full_access_token"
          },
          {
            "selected": false,
            "text": "Auth::ContainerRegistryAuthenticationService.token_expire_at",
            "value": "Auth::ContainerRegistryAuthenticationService.token_expire_at"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#call",
            "value": "Banzai::Filter::AbstractReferenceFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#current_project_path",
            "value": "Banzai::Filter::AbstractReferenceFilter#current_project_path"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#data_attributes_for",
            "value": "Banzai::Filter::AbstractReferenceFilter#data_attributes_for"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#find_object_cached",
            "value": "Banzai::Filter::AbstractReferenceFilter#find_object_cached"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#find_objects_cache",
            "value": "Banzai::Filter::AbstractReferenceFilter#find_objects_cache"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#find_projects_for_paths",
            "value": "Banzai::Filter::AbstractReferenceFilter#find_projects_for_paths"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#get_or_set_cache",
            "value": "Banzai::Filter::AbstractReferenceFilter#get_or_set_cache"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#object_class",
            "value": "Banzai::Filter::AbstractReferenceFilter#object_class"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#object_link_filter",
            "value": "Banzai::Filter::AbstractReferenceFilter#object_link_filter"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#object_link_text",
            "value": "Banzai::Filter::AbstractReferenceFilter#object_link_text"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#object_link_text_extras",
            "value": "Banzai::Filter::AbstractReferenceFilter#object_link_text_extras"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#object_link_title",
            "value": "Banzai::Filter::AbstractReferenceFilter#object_link_title"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#object_sym",
            "value": "Banzai::Filter::AbstractReferenceFilter#object_sym"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#project_from_ref_cache",
            "value": "Banzai::Filter::AbstractReferenceFilter#project_from_ref_cache"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#project_from_ref_cached",
            "value": "Banzai::Filter::AbstractReferenceFilter#project_from_ref_cached"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#project_refs_cache",
            "value": "Banzai::Filter::AbstractReferenceFilter#project_refs_cache"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#projects_per_reference",
            "value": "Banzai::Filter::AbstractReferenceFilter#projects_per_reference"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#projects_relation_for_paths",
            "value": "Banzai::Filter::AbstractReferenceFilter#projects_relation_for_paths"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#references_in",
            "value": "Banzai::Filter::AbstractReferenceFilter#references_in"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#references_per_project",
            "value": "Banzai::Filter::AbstractReferenceFilter#references_per_project"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#url_for_object_cache",
            "value": "Banzai::Filter::AbstractReferenceFilter#url_for_object_cache"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter#url_for_object_cached",
            "value": "Banzai::Filter::AbstractReferenceFilter#url_for_object_cached"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter.object_name",
            "value": "Banzai::Filter::AbstractReferenceFilter.object_name"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter.object_sym",
            "value": "Banzai::Filter::AbstractReferenceFilter.object_sym"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AbstractReferenceFilter.references_in",
            "value": "Banzai::Filter::AbstractReferenceFilter.references_in"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AutolinkFilter#autolink_filter",
            "value": "Banzai::Filter::AutolinkFilter#autolink_filter"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AutolinkFilter#call",
            "value": "Banzai::Filter::AutolinkFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AutolinkFilter#link_options",
            "value": "Banzai::Filter::AutolinkFilter#link_options"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AutolinkFilter#rinku_parse",
            "value": "Banzai::Filter::AutolinkFilter#rinku_parse"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::AutolinkFilter#text_parse",
            "value": "Banzai::Filter::AutolinkFilter#text_parse"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::BlockquoteFenceFilter#call",
            "value": "Banzai::Filter::BlockquoteFenceFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::BlockquoteFenceFilter#initialize",
            "value": "Banzai::Filter::BlockquoteFenceFilter#initialize"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::CommitRangeReferenceFilter#find_object",
            "value": "Banzai::Filter::CommitRangeReferenceFilter#find_object"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::CommitRangeReferenceFilter#initialize",
            "value": "Banzai::Filter::CommitRangeReferenceFilter#initialize"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::CommitRangeReferenceFilter#url_for_object",
            "value": "Banzai::Filter::CommitRangeReferenceFilter#url_for_object"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::CommitRangeReferenceFilter.references_in",
            "value": "Banzai::Filter::CommitRangeReferenceFilter.references_in"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::CommitReferenceFilter#find_object",
            "value": "Banzai::Filter::CommitReferenceFilter#find_object"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::CommitReferenceFilter#object_link_text_extras",
            "value": "Banzai::Filter::CommitReferenceFilter#object_link_text_extras"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::CommitReferenceFilter#url_for_object",
            "value": "Banzai::Filter::CommitReferenceFilter#url_for_object"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::CommitReferenceFilter.object_class",
            "value": "Banzai::Filter::CommitReferenceFilter.object_class"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::CommitReferenceFilter.references_in",
            "value": "Banzai::Filter::CommitReferenceFilter.references_in"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::EmojiFilter#call",
            "value": "Banzai::Filter::EmojiFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::EmojiFilter#emoji_image_filter",
            "value": "Banzai::Filter::EmojiFilter#emoji_image_filter"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::EmojiFilter#emoji_pattern",
            "value": "Banzai::Filter::EmojiFilter#emoji_pattern"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::EmojiFilter#emoji_url",
            "value": "Banzai::Filter::EmojiFilter#emoji_url"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::EmojiFilter#url_to_image",
            "value": "Banzai::Filter::EmojiFilter#url_to_image"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::EmojiFilter.emoji_pattern",
            "value": "Banzai::Filter::EmojiFilter.emoji_pattern"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ExternalIssueReferenceFilter#call",
            "value": "Banzai::Filter::ExternalIssueReferenceFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ExternalIssueReferenceFilter#default_issues_tracker?",
            "value": "Banzai::Filter::ExternalIssueReferenceFilter#default_issues_tracker?"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ExternalIssueReferenceFilter#default_issues_tracker_cache",
            "value": "Banzai::Filter::ExternalIssueReferenceFilter#default_issues_tracker_cache"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ExternalIssueReferenceFilter#issue_link_filter",
            "value": "Banzai::Filter::ExternalIssueReferenceFilter#issue_link_filter"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ExternalIssueReferenceFilter#url_for_issue",
            "value": "Banzai::Filter::ExternalIssueReferenceFilter#url_for_issue"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ExternalIssueReferenceFilter.references_in",
            "value": "Banzai::Filter::ExternalIssueReferenceFilter.references_in"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ExternalLinkFilter#call",
            "value": "Banzai::Filter::ExternalLinkFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ExternalLinkFilter#internal_url",
            "value": "Banzai::Filter::ExternalLinkFilter#internal_url"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::GollumTagsFilter#call",
            "value": "Banzai::Filter::GollumTagsFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::GollumTagsFilter#process_image_tag",
            "value": "Banzai::Filter::GollumTagsFilter#process_image_tag"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::GollumTagsFilter#process_tag",
            "value": "Banzai::Filter::GollumTagsFilter#process_tag"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::GollumTagsFilter#toc_tag?",
            "value": "Banzai::Filter::GollumTagsFilter#toc_tag?"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::GollumTagsFilter#validate",
            "value": "Banzai::Filter::GollumTagsFilter#validate"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::HtmlEntityFilter#call",
            "value": "Banzai::Filter::HtmlEntityFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ImageLinkFilter#call",
            "value": "Banzai::Filter::ImageLinkFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::InlineDiffFilter#call",
            "value": "Banzai::Filter::InlineDiffFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::InlineDiffFilter#inline_diff_filter",
            "value": "Banzai::Filter::InlineDiffFilter#inline_diff_filter"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::IssueReferenceFilter#data_attributes_for",
            "value": "Banzai::Filter::IssueReferenceFilter#data_attributes_for"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::IssueReferenceFilter#find_object",
            "value": "Banzai::Filter::IssueReferenceFilter#find_object"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::IssueReferenceFilter#find_projects_for_paths",
            "value": "Banzai::Filter::IssueReferenceFilter#find_projects_for_paths"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::IssueReferenceFilter#issues_per_project",
            "value": "Banzai::Filter::IssueReferenceFilter#issues_per_project"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::IssueReferenceFilter#object_link_title",
            "value": "Banzai::Filter::IssueReferenceFilter#object_link_title"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::IssueReferenceFilter#project_from_ref",
            "value": "Banzai::Filter::IssueReferenceFilter#project_from_ref"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::IssueReferenceFilter#projects_relation_for_paths",
            "value": "Banzai::Filter::IssueReferenceFilter#projects_relation_for_paths"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::IssueReferenceFilter#url_for_object",
            "value": "Banzai::Filter::IssueReferenceFilter#url_for_object"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::IssueReferenceFilter.object_class",
            "value": "Banzai::Filter::IssueReferenceFilter.object_class"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::LabelReferenceFilter#find_label",
            "value": "Banzai::Filter::LabelReferenceFilter#find_label"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::LabelReferenceFilter#find_object",
            "value": "Banzai::Filter::LabelReferenceFilter#find_object"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::LabelReferenceFilter#object_link_text",
            "value": "Banzai::Filter::LabelReferenceFilter#object_link_text"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::LabelReferenceFilter#references_in",
            "value": "Banzai::Filter::LabelReferenceFilter#references_in"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::LabelReferenceFilter#url_for_object",
            "value": "Banzai::Filter::LabelReferenceFilter#url_for_object"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::MarkdownFilter#call",
            "value": "Banzai::Filter::MarkdownFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::MarkdownFilter#initialize",
            "value": "Banzai::Filter::MarkdownFilter#initialize"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::MarkdownFilter.renderer",
            "value": "Banzai::Filter::MarkdownFilter.renderer"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::MergeRequestReferenceFilter#find_object",
            "value": "Banzai::Filter::MergeRequestReferenceFilter#find_object"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::MergeRequestReferenceFilter#object_link_text_extras",
            "value": "Banzai::Filter::MergeRequestReferenceFilter#object_link_text_extras"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::MergeRequestReferenceFilter#url_for_object",
            "value": "Banzai::Filter::MergeRequestReferenceFilter#url_for_object"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::MilestoneReferenceFilter#find_milestone",
            "value": "Banzai::Filter::MilestoneReferenceFilter#find_milestone"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::MilestoneReferenceFilter#find_object",
            "value": "Banzai::Filter::MilestoneReferenceFilter#find_object"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::MilestoneReferenceFilter#references_in",
            "value": "Banzai::Filter::MilestoneReferenceFilter#references_in"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::MilestoneReferenceFilter#url_for_object",
            "value": "Banzai::Filter::MilestoneReferenceFilter#url_for_object"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::RedactorFilter#call",
            "value": "Banzai::Filter::RedactorFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::RedactorFilter#project",
            "value": "Banzai::Filter::RedactorFilter#project"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ReferenceFilter#data_attribute",
            "value": "Banzai::Filter::ReferenceFilter#data_attribute"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ReferenceFilter#each_node",
            "value": "Banzai::Filter::ReferenceFilter#each_node"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ReferenceFilter#element_node?",
            "value": "Banzai::Filter::ReferenceFilter#element_node?"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ReferenceFilter#escape_once",
            "value": "Banzai::Filter::ReferenceFilter#escape_once"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ReferenceFilter#ignore_ancestor_query",
            "value": "Banzai::Filter::ReferenceFilter#ignore_ancestor_query"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ReferenceFilter#nodes",
            "value": "Banzai::Filter::ReferenceFilter#nodes"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ReferenceFilter#project",
            "value": "Banzai::Filter::ReferenceFilter#project"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ReferenceFilter#reference_class",
            "value": "Banzai::Filter::ReferenceFilter#reference_class"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ReferenceFilter#replace_link_node_with_href",
            "value": "Banzai::Filter::ReferenceFilter#replace_link_node_with_href"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ReferenceFilter#replace_link_node_with_text",
            "value": "Banzai::Filter::ReferenceFilter#replace_link_node_with_text"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ReferenceFilter#replace_text_when_pattern_matches",
            "value": "Banzai::Filter::ReferenceFilter#replace_text_when_pattern_matches"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ReferenceFilter#text_node?",
            "value": "Banzai::Filter::ReferenceFilter#text_node?"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ReferenceFilter#validate",
            "value": "Banzai::Filter::ReferenceFilter#validate"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::ReferenceFilter#yield_valid_link",
            "value": "Banzai::Filter::ReferenceFilter#yield_valid_link"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::RelativeLinkFilter#build_relative_path",
            "value": "Banzai::Filter::RelativeLinkFilter#build_relative_path"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::RelativeLinkFilter#call",
            "value": "Banzai::Filter::RelativeLinkFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::RelativeLinkFilter#current_commit",
            "value": "Banzai::Filter::RelativeLinkFilter#current_commit"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::RelativeLinkFilter#file_exists?",
            "value": "Banzai::Filter::RelativeLinkFilter#file_exists?"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::RelativeLinkFilter#linkable_files?",
            "value": "Banzai::Filter::RelativeLinkFilter#linkable_files?"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::RelativeLinkFilter#process_link_attr",
            "value": "Banzai::Filter::RelativeLinkFilter#process_link_attr"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::RelativeLinkFilter#rebuild_relative_uri",
            "value": "Banzai::Filter::RelativeLinkFilter#rebuild_relative_uri"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::RelativeLinkFilter#ref",
            "value": "Banzai::Filter::RelativeLinkFilter#ref"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::RelativeLinkFilter#relative_file_path",
            "value": "Banzai::Filter::RelativeLinkFilter#relative_file_path"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::RelativeLinkFilter#relative_url_root",
            "value": "Banzai::Filter::RelativeLinkFilter#relative_url_root"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::RelativeLinkFilter#repository",
            "value": "Banzai::Filter::RelativeLinkFilter#repository"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::RelativeLinkFilter#uri_type",
            "value": "Banzai::Filter::RelativeLinkFilter#uri_type"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::SanitizationFilter#customize_whitelist",
            "value": "Banzai::Filter::SanitizationFilter#customize_whitelist"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::SanitizationFilter#customized?",
            "value": "Banzai::Filter::SanitizationFilter#customized?"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::SanitizationFilter#whitelist",
            "value": "Banzai::Filter::SanitizationFilter#whitelist"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::SanitizationFilter.clean_spans",
            "value": "Banzai::Filter::SanitizationFilter.clean_spans"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::SanitizationFilter.remove_rel",
            "value": "Banzai::Filter::SanitizationFilter.remove_rel"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::SanitizationFilter.remove_unsafe_links",
            "value": "Banzai::Filter::SanitizationFilter.remove_unsafe_links"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::SnippetReferenceFilter#find_object",
            "value": "Banzai::Filter::SnippetReferenceFilter#find_object"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::SnippetReferenceFilter.object_class",
            "value": "Banzai::Filter::SnippetReferenceFilter.object_class"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::SyntaxHighlightFilter#call",
            "value": "Banzai::Filter::SyntaxHighlightFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::SyntaxHighlightFilter#format",
            "value": "Banzai::Filter::SyntaxHighlightFilter#format"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::SyntaxHighlightFilter#highlight_node",
            "value": "Banzai::Filter::SyntaxHighlightFilter#highlight_node"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::SyntaxHighlightFilter#lex",
            "value": "Banzai::Filter::SyntaxHighlightFilter#lex"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::SyntaxHighlightFilter#lexer_for",
            "value": "Banzai::Filter::SyntaxHighlightFilter#lexer_for"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::SyntaxHighlightFilter#replace_parent_pre_element",
            "value": "Banzai::Filter::SyntaxHighlightFilter#replace_parent_pre_element"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::TableOfContentsFilter#anchor_tag",
            "value": "Banzai::Filter::TableOfContentsFilter#anchor_tag"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::TableOfContentsFilter#call",
            "value": "Banzai::Filter::TableOfContentsFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::TableOfContentsFilter#push_toc",
            "value": "Banzai::Filter::TableOfContentsFilter#push_toc"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::TaskListFilter#add_css_class",
            "value": "Banzai::Filter::TaskListFilter#add_css_class"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::TaskListFilter#add_css_class_without_fix",
            "value": "Banzai::Filter::TaskListFilter#add_css_class_without_fix"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UploadLinkFilter#build_url",
            "value": "Banzai::Filter::UploadLinkFilter#build_url"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UploadLinkFilter#call",
            "value": "Banzai::Filter::UploadLinkFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UploadLinkFilter#process_link_attr",
            "value": "Banzai::Filter::UploadLinkFilter#process_link_attr"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UploadLinkFilter#validate",
            "value": "Banzai::Filter::UploadLinkFilter#validate"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UserReferenceFilter#call",
            "value": "Banzai::Filter::UserReferenceFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UserReferenceFilter#link_class",
            "value": "Banzai::Filter::UserReferenceFilter#link_class"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UserReferenceFilter#link_tag",
            "value": "Banzai::Filter::UserReferenceFilter#link_tag"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UserReferenceFilter#link_to_all",
            "value": "Banzai::Filter::UserReferenceFilter#link_to_all"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UserReferenceFilter#link_to_group",
            "value": "Banzai::Filter::UserReferenceFilter#link_to_group"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UserReferenceFilter#link_to_namespace",
            "value": "Banzai::Filter::UserReferenceFilter#link_to_namespace"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UserReferenceFilter#link_to_user",
            "value": "Banzai::Filter::UserReferenceFilter#link_to_user"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UserReferenceFilter#namespaces",
            "value": "Banzai::Filter::UserReferenceFilter#namespaces"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UserReferenceFilter#user_link_filter",
            "value": "Banzai::Filter::UserReferenceFilter#user_link_filter"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UserReferenceFilter#usernames",
            "value": "Banzai::Filter::UserReferenceFilter#usernames"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::UserReferenceFilter.references_in",
            "value": "Banzai::Filter::UserReferenceFilter.references_in"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::VideoLinkFilter#call",
            "value": "Banzai::Filter::VideoLinkFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::VideoLinkFilter#query",
            "value": "Banzai::Filter::VideoLinkFilter#query"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::WikiLinkFilter#apply_rewrite_rules",
            "value": "Banzai::Filter::WikiLinkFilter#apply_rewrite_rules"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::WikiLinkFilter#call",
            "value": "Banzai::Filter::WikiLinkFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::WikiLinkFilter#process_link_attr",
            "value": "Banzai::Filter::WikiLinkFilter#process_link_attr"
          },
          {
            "selected": false,
            "text": "Banzai::Filter::YamlFrontMatterFilter#call",
            "value": "Banzai::Filter::YamlFrontMatterFilter#call"
          },
          {
            "selected": false,
            "text": "Banzai::NoteRenderer.render",
            "value": "Banzai::NoteRenderer.render"
          },
          {
            "selected": false,
            "text": "Banzai::ObjectRenderer#base_context",
            "value": "Banzai::ObjectRenderer#base_context"
          },
          {
            "selected": false,
            "text": "Banzai::ObjectRenderer#context_for",
            "value": "Banzai::ObjectRenderer#context_for"
          },
          {
            "selected": false,
            "text": "Banzai::ObjectRenderer#redact_documents",
            "value": "Banzai::ObjectRenderer#redact_documents"
          },
          {
            "selected": false,
            "text": "Banzai::ObjectRenderer#render",
            "value": "Banzai::ObjectRenderer#render"
          },
          {
            "selected": false,
            "text": "Banzai::ObjectRenderer#render_attributes",
            "value": "Banzai::ObjectRenderer#render_attributes"
          },
          {
            "selected": false,
            "text": "Banzai::ObjectRenderer#render_objects",
            "value": "Banzai::ObjectRenderer#render_objects"
          },
          {
            "selected": false,
            "text": "Banzai::Querying.css",
            "value": "Banzai::Querying.css"
          },
          {
            "selected": false,
            "text": "Banzai::Redactor#document_nodes",
            "value": "Banzai::Redactor#document_nodes"
          },
          {
            "selected": false,
            "text": "Banzai::Redactor#nodes_visible_to_user",
            "value": "Banzai::Redactor#nodes_visible_to_user"
          },
          {
            "selected": false,
            "text": "Banzai::Redactor#redact",
            "value": "Banzai::Redactor#redact"
          },
          {
            "selected": false,
            "text": "Banzai::Redactor#redact_document_nodes",
            "value": "Banzai::Redactor#redact_document_nodes"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#can?",
            "value": "Banzai::ReferenceParser::BaseParser#can?"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#collection_cache",
            "value": "Banzai::ReferenceParser::BaseParser#collection_cache"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#collection_cache_key",
            "value": "Banzai::ReferenceParser::BaseParser#collection_cache_key"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#collection_objects_for_ids",
            "value": "Banzai::ReferenceParser::BaseParser#collection_objects_for_ids"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#current_user",
            "value": "Banzai::ReferenceParser::BaseParser#current_user"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#find_projects_for_hash_keys",
            "value": "Banzai::ReferenceParser::BaseParser#find_projects_for_hash_keys"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#gather_attributes_per_project",
            "value": "Banzai::ReferenceParser::BaseParser#gather_attributes_per_project"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#gather_references",
            "value": "Banzai::ReferenceParser::BaseParser#gather_references"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#grouped_objects_for_nodes",
            "value": "Banzai::ReferenceParser::BaseParser#grouped_objects_for_nodes"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#initialize",
            "value": "Banzai::ReferenceParser::BaseParser#initialize"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#lazy",
            "value": "Banzai::ReferenceParser::BaseParser#lazy"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#nodes_visible_to_user",
            "value": "Banzai::ReferenceParser::BaseParser#nodes_visible_to_user"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#process",
            "value": "Banzai::ReferenceParser::BaseParser#process"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#projects_for_nodes",
            "value": "Banzai::ReferenceParser::BaseParser#projects_for_nodes"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#referenced_by",
            "value": "Banzai::ReferenceParser::BaseParser#referenced_by"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser#unique_attribute_values",
            "value": "Banzai::ReferenceParser::BaseParser#unique_attribute_values"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::BaseParser.data_attribute",
            "value": "Banzai::ReferenceParser::BaseParser.data_attribute"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::CommitParser#commit_ids_per_project",
            "value": "Banzai::ReferenceParser::CommitParser#commit_ids_per_project"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::CommitParser#find_commits",
            "value": "Banzai::ReferenceParser::CommitParser#find_commits"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::CommitParser#referenced_by",
            "value": "Banzai::ReferenceParser::CommitParser#referenced_by"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::ExternalIssueParser#referenced_by",
            "value": "Banzai::ReferenceParser::ExternalIssueParser#referenced_by"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::IssueParser#issue_for_node",
            "value": "Banzai::ReferenceParser::IssueParser#issue_for_node"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::IssueParser#issues_for_nodes",
            "value": "Banzai::ReferenceParser::IssueParser#issues_for_nodes"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::IssueParser#nodes_visible_to_user",
            "value": "Banzai::ReferenceParser::IssueParser#nodes_visible_to_user"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::IssueParser#referenced_by",
            "value": "Banzai::ReferenceParser::IssueParser#referenced_by"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::MergeRequestParser#references_relation",
            "value": "Banzai::ReferenceParser::MergeRequestParser#references_relation"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::UserParser#find_users",
            "value": "Banzai::ReferenceParser::UserParser#find_users"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::UserParser#find_users_for_groups",
            "value": "Banzai::ReferenceParser::UserParser#find_users_for_groups"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::UserParser#find_users_for_projects",
            "value": "Banzai::ReferenceParser::UserParser#find_users_for_projects"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::UserParser#nodes_user_can_reference",
            "value": "Banzai::ReferenceParser::UserParser#nodes_user_can_reference"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::UserParser#nodes_visible_to_user",
            "value": "Banzai::ReferenceParser::UserParser#nodes_visible_to_user"
          },
          {
            "selected": false,
            "text": "Banzai::ReferenceParser::UserParser#referenced_by",
            "value": "Banzai::ReferenceParser::UserParser#referenced_by"
          },
          {
            "selected": false,
            "text": "BaseService#can?",
            "value": "BaseService#can?"
          },
          {
            "selected": false,
            "text": "BaseService#event_service",
            "value": "BaseService#event_service"
          },
          {
            "selected": false,
            "text": "BaseService#initialize",
            "value": "BaseService#initialize"
          },
          {
            "selected": false,
            "text": "BaseService#log_info",
            "value": "BaseService#log_info"
          },
          {
            "selected": false,
            "text": "Boards::BaseService#board",
            "value": "Boards::BaseService#board"
          },
          {
            "selected": false,
            "text": "Boards::CreateService#create_board!",
            "value": "Boards::CreateService#create_board!"
          },
          {
            "selected": false,
            "text": "Boards::CreateService#execute",
            "value": "Boards::CreateService#execute"
          },
          {
            "selected": false,
            "text": "Boards::Issues::CreateService#create_issue",
            "value": "Boards::Issues::CreateService#create_issue"
          },
          {
            "selected": false,
            "text": "Boards::Issues::CreateService#execute",
            "value": "Boards::Issues::CreateService#execute"
          },
          {
            "selected": false,
            "text": "Boards::Issues::ListService#board_label_ids",
            "value": "Boards::Issues::ListService#board_label_ids"
          },
          {
            "selected": false,
            "text": "Boards::Issues::ListService#execute",
            "value": "Boards::Issues::ListService#execute"
          },
          {
            "selected": false,
            "text": "Boards::Issues::ListService#filter_params",
            "value": "Boards::Issues::ListService#filter_params"
          },
          {
            "selected": false,
            "text": "Boards::Issues::ListService#list",
            "value": "Boards::Issues::ListService#list"
          },
          {
            "selected": false,
            "text": "Boards::Issues::ListService#set_default_sort",
            "value": "Boards::Issues::ListService#set_default_sort"
          },
          {
            "selected": false,
            "text": "Boards::Issues::ListService#set_project",
            "value": "Boards::Issues::ListService#set_project"
          },
          {
            "selected": false,
            "text": "Boards::Issues::ListService#set_state",
            "value": "Boards::Issues::ListService#set_state"
          },
          {
            "selected": false,
            "text": "Boards::Issues::ListService#with_list_label",
            "value": "Boards::Issues::ListService#with_list_label"
          },
          {
            "selected": false,
            "text": "Boards::Issues::ListService#without_board_labels",
            "value": "Boards::Issues::ListService#without_board_labels"
          },
          {
            "selected": false,
            "text": "Boards::Issues::MoveService#execute",
            "value": "Boards::Issues::MoveService#execute"
          },
          {
            "selected": false,
            "text": "Boards::Issues::MoveService#issue_params",
            "value": "Boards::Issues::MoveService#issue_params"
          },
          {
            "selected": false,
            "text": "Boards::Issues::MoveService#moving_from_list",
            "value": "Boards::Issues::MoveService#moving_from_list"
          },
          {
            "selected": false,
            "text": "Boards::Issues::MoveService#moving_to_list",
            "value": "Boards::Issues::MoveService#moving_to_list"
          },
          {
            "selected": false,
            "text": "Boards::Issues::MoveService#remove_label_ids",
            "value": "Boards::Issues::MoveService#remove_label_ids"
          },
          {
            "selected": false,
            "text": "Boards::Issues::MoveService#update_service",
            "value": "Boards::Issues::MoveService#update_service"
          },
          {
            "selected": false,
            "text": "Boards::Issues::MoveService#valid_move?",
            "value": "Boards::Issues::MoveService#valid_move?"
          },
          {
            "selected": false,
            "text": "Boards::Lists::CreateService#create_list",
            "value": "Boards::Lists::CreateService#create_list"
          },
          {
            "selected": false,
            "text": "Boards::Lists::CreateService#execute",
            "value": "Boards::Lists::CreateService#execute"
          },
          {
            "selected": false,
            "text": "Boards::Lists::CreateService#next_position",
            "value": "Boards::Lists::CreateService#next_position"
          },
          {
            "selected": false,
            "text": "Boards::Lists::DestroyService#decrement_higher_lists",
            "value": "Boards::Lists::DestroyService#decrement_higher_lists"
          },
          {
            "selected": false,
            "text": "Boards::Lists::DestroyService#execute",
            "value": "Boards::Lists::DestroyService#execute"
          },
          {
            "selected": false,
            "text": "Boards::Lists::DestroyService#remove_list",
            "value": "Boards::Lists::DestroyService#remove_list"
          },
          {
            "selected": false,
            "text": "Boards::Lists::GenerateService#create_list",
            "value": "Boards::Lists::GenerateService#create_list"
          },
          {
            "selected": false,
            "text": "Boards::Lists::GenerateService#execute",
            "value": "Boards::Lists::GenerateService#execute"
          },
          {
            "selected": false,
            "text": "Boards::Lists::GenerateService#find_or_create_label",
            "value": "Boards::Lists::GenerateService#find_or_create_label"
          },
          {
            "selected": false,
            "text": "Boards::Lists::MoveService#decrement_intermediate_lists",
            "value": "Boards::Lists::MoveService#decrement_intermediate_lists"
          },
          {
            "selected": false,
            "text": "Boards::Lists::MoveService#execute",
            "value": "Boards::Lists::MoveService#execute"
          },
          {
            "selected": false,
            "text": "Boards::Lists::MoveService#increment_intermediate_lists",
            "value": "Boards::Lists::MoveService#increment_intermediate_lists"
          },
          {
            "selected": false,
            "text": "Boards::Lists::MoveService#reorder_intermediate_lists",
            "value": "Boards::Lists::MoveService#reorder_intermediate_lists"
          },
          {
            "selected": false,
            "text": "Boards::Lists::MoveService#update_list_position",
            "value": "Boards::Lists::MoveService#update_list_position"
          },
          {
            "selected": false,
            "text": "Boards::Lists::MoveService#valid_move?",
            "value": "Boards::Lists::MoveService#valid_move?"
          },
          {
            "selected": false,
            "text": "BranchesFinder#execute",
            "value": "BranchesFinder#execute"
          },
          {
            "selected": false,
            "text": "BroadcastMessage.current",
            "value": "BroadcastMessage.current"
          },
          {
            "selected": false,
            "text": "BuildsEmailService#can_test?",
            "value": "BuildsEmailService#can_test?"
          },
          {
            "selected": false,
            "text": "BuildsEmailService#test_data",
            "value": "BuildsEmailService#test_data"
          },
          {
            "selected": false,
            "text": "Ci::Build#artifacts?",
            "value": "Ci::Build#artifacts?"
          },
          {
            "selected": false,
            "text": "Ci::Build#artifacts_metadata?",
            "value": "Ci::Build#artifacts_metadata?"
          },
          {
            "selected": false,
            "text": "Ci::Build#build_attributes_from_config",
            "value": "Ci::Build#build_attributes_from_config"
          },
          {
            "selected": false,
            "text": "Ci::Build#erase",
            "value": "Ci::Build#erase"
          },
          {
            "selected": false,
            "text": "Ci::Build#execute_hooks",
            "value": "Ci::Build#execute_hooks"
          },
          {
            "selected": false,
            "text": "Ci::Build#extract_coverage",
            "value": "Ci::Build#extract_coverage"
          },
          {
            "selected": false,
            "text": "Ci::Build#has_tags?",
            "value": "Ci::Build#has_tags?"
          },
          {
            "selected": false,
            "text": "Ci::Build#merge_request",
            "value": "Ci::Build#merge_request"
          },
          {
            "selected": false,
            "text": "Ci::Build#other_actions",
            "value": "Ci::Build#other_actions"
          },
          {
            "selected": false,
            "text": "Ci::Build#play",
            "value": "Ci::Build#play"
          },
          {
            "selected": false,
            "text": "Ci::Build#update_coverage",
            "value": "Ci::Build#update_coverage"
          },
          {
            "selected": false,
            "text": "Ci::Build#update_erased!",
            "value": "Ci::Build#update_erased!"
          },
          {
            "selected": false,
            "text": "Ci::Build#when",
            "value": "Ci::Build#when"
          },
          {
            "selected": false,
            "text": "Ci::Build#yaml_variables",
            "value": "Ci::Build#yaml_variables"
          },
          {
            "selected": false,
            "text": "Ci::Build.find_by_token",
            "value": "Ci::Build.find_by_token"
          },
          {
            "selected": false,
            "text": "Ci::CreatePipelineBuildsService#create_build",
            "value": "Ci::CreatePipelineBuildsService#create_build"
          },
          {
            "selected": false,
            "text": "Ci::CreatePipelineBuildsService#execute",
            "value": "Ci::CreatePipelineBuildsService#execute"
          },
          {
            "selected": false,
            "text": "Ci::CreatePipelineBuildsService#existing_build_names",
            "value": "Ci::CreatePipelineBuildsService#existing_build_names"
          },
          {
            "selected": false,
            "text": "Ci::CreatePipelineBuildsService#new_builds",
            "value": "Ci::CreatePipelineBuildsService#new_builds"
          },
          {
            "selected": false,
            "text": "Ci::CreatePipelineService#branch?",
            "value": "Ci::CreatePipelineService#branch?"
          },
          {
            "selected": false,
            "text": "Ci::CreatePipelineService#commit",
            "value": "Ci::CreatePipelineService#commit"
          },
          {
            "selected": false,
            "text": "Ci::CreatePipelineService#execute",
            "value": "Ci::CreatePipelineService#execute"
          },
          {
            "selected": false,
            "text": "Ci::CreatePipelineService#sha",
            "value": "Ci::CreatePipelineService#sha"
          },
          {
            "selected": false,
            "text": "Ci::CreatePipelineService#tag?",
            "value": "Ci::CreatePipelineService#tag?"
          },
          {
            "selected": false,
            "text": "Ci::ImageForBuildService#execute",
            "value": "Ci::ImageForBuildService#execute"
          },
          {
            "selected": false,
            "text": "Ci::ImageForBuildService#ref_sha",
            "value": "Ci::ImageForBuildService#ref_sha"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline#build_updated",
            "value": "Ci::Pipeline#build_updated"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline#cancelable?",
            "value": "Ci::Pipeline#cancelable?"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline#config_builds_attributes",
            "value": "Ci::Pipeline#config_builds_attributes"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline#has_warnings?",
            "value": "Ci::Pipeline#has_warnings?"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline#mark_as_processable_after_stage",
            "value": "Ci::Pipeline#mark_as_processable_after_stage"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline#merge_requests",
            "value": "Ci::Pipeline#merge_requests"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline#queued_duration",
            "value": "Ci::Pipeline#queued_duration"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline#retry_failed",
            "value": "Ci::Pipeline#retry_failed"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline#retryable?",
            "value": "Ci::Pipeline#retryable?"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline#stages_with_latest_statuses",
            "value": "Ci::Pipeline#stages_with_latest_statuses"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline#triggered?",
            "value": "Ci::Pipeline#triggered?"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline#update_duration",
            "value": "Ci::Pipeline#update_duration"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline#update_status",
            "value": "Ci::Pipeline#update_status"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline.latest_successful_for",
            "value": "Ci::Pipeline.latest_successful_for"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline.stages",
            "value": "Ci::Pipeline.stages"
          },
          {
            "selected": false,
            "text": "Ci::Pipeline.total_duration",
            "value": "Ci::Pipeline.total_duration"
          },
          {
            "selected": false,
            "text": "Ci::ProcessPipelineService#create_builds!",
            "value": "Ci::ProcessPipelineService#create_builds!"
          },
          {
            "selected": false,
            "text": "Ci::ProcessPipelineService#created_builds",
            "value": "Ci::ProcessPipelineService#created_builds"
          },
          {
            "selected": false,
            "text": "Ci::ProcessPipelineService#created_builds_in_stage",
            "value": "Ci::ProcessPipelineService#created_builds_in_stage"
          },
          {
            "selected": false,
            "text": "Ci::ProcessPipelineService#execute",
            "value": "Ci::ProcessPipelineService#execute"
          },
          {
            "selected": false,
            "text": "Ci::ProcessPipelineService#process_build",
            "value": "Ci::ProcessPipelineService#process_build"
          },
          {
            "selected": false,
            "text": "Ci::ProcessPipelineService#process_stage",
            "value": "Ci::ProcessPipelineService#process_stage"
          },
          {
            "selected": false,
            "text": "Ci::ProcessPipelineService#stage_indexes_of_created_builds",
            "value": "Ci::ProcessPipelineService#stage_indexes_of_created_builds"
          },
          {
            "selected": false,
            "text": "Ci::ProcessPipelineService#status_for_prior_stages",
            "value": "Ci::ProcessPipelineService#status_for_prior_stages"
          },
          {
            "selected": false,
            "text": "Ci::Runner#assignable_for?",
            "value": "Ci::Runner#assignable_for?"
          },
          {
            "selected": false,
            "text": "Ci::Runner#belongs_to_one_project?",
            "value": "Ci::Runner#belongs_to_one_project?"
          },
          {
            "selected": false,
            "text": "Ci::Runner#has_tags?",
            "value": "Ci::Runner#has_tags?"
          },
          {
            "selected": false,
            "text": "Ci::Trigger#last_trigger_request",
            "value": "Ci::Trigger#last_trigger_request"
          },
          {
            "selected": false,
            "text": "CommitStatus#duration",
            "value": "CommitStatus#duration"
          },
          {
            "selected": false,
            "text": "CommitStatus#group_name",
            "value": "CommitStatus#group_name"
          },
          {
            "selected": false,
            "text": "CommitStatus.stages",
            "value": "CommitStatus.stages"
          },
          {
            "selected": false,
            "text": "CommitStatus.stages_status",
            "value": "CommitStatus.stages_status"
          },
          {
            "selected": false,
            "text": "Commits::ChangeService#check_push_permissions",
            "value": "Commits::ChangeService#check_push_permissions"
          },
          {
            "selected": false,
            "text": "Commits::ChangeService#commit_change",
            "value": "Commits::ChangeService#commit_change"
          },
          {
            "selected": false,
            "text": "Commits::ChangeService#create_target_branch",
            "value": "Commits::ChangeService#create_target_branch"
          },
          {
            "selected": false,
            "text": "Commits::ChangeService#execute",
            "value": "Commits::ChangeService#execute"
          },
          {
            "selected": false,
            "text": "Commits::CherryPickService#commit",
            "value": "Commits::CherryPickService#commit"
          },
          {
            "selected": false,
            "text": "Commits::RevertService#commit",
            "value": "Commits::RevertService#commit"
          },
          {
            "selected": false,
            "text": "CompareService#execute",
            "value": "CompareService#execute"
          },
          {
            "selected": false,
            "text": "ContributedProjectsFinder#all_projects",
            "value": "ContributedProjectsFinder#all_projects"
          },
          {
            "selected": false,
            "text": "ContributedProjectsFinder#execute",
            "value": "ContributedProjectsFinder#execute"
          },
          {
            "selected": false,
            "text": "CreateBranchService#execute",
            "value": "CreateBranchService#execute"
          },
          {
            "selected": false,
            "text": "CreateReleaseService#execute",
            "value": "CreateReleaseService#execute"
          },
          {
            "selected": false,
            "text": "CreateSnippetService#execute",
            "value": "CreateSnippetService#execute"
          },
          {
            "selected": false,
            "text": "CreateTagService#execute",
            "value": "CreateTagService#execute"
          },
          {
            "selected": false,
            "text": "DeleteBranchService#execute",
            "value": "DeleteBranchService#execute"
          },
          {
            "selected": false,
            "text": "DeleteTagService#build_push_data",
            "value": "DeleteTagService#build_push_data"
          },
          {
            "selected": false,
            "text": "DeleteTagService#execute",
            "value": "DeleteTagService#execute"
          },
          {
            "selected": false,
            "text": "DeleteUserService#execute",
            "value": "DeleteUserService#execute"
          },
          {
            "selected": false,
            "text": "DeployKeysProject#destroy_orphaned_deploy_key",
            "value": "DeployKeysProject#destroy_orphaned_deploy_key"
          },
          {
            "selected": false,
            "text": "Deployment#includes_commit?",
            "value": "Deployment#includes_commit?"
          },
          {
            "selected": false,
            "text": "Deployment#last?",
            "value": "Deployment#last?"
          },
          {
            "selected": false,
            "text": "DestroyGroupService#async_execute",
            "value": "DestroyGroupService#async_execute"
          },
          {
            "selected": false,
            "text": "DiffNote#discussion",
            "value": "DiffNote#discussion"
          },
          {
            "selected": false,
            "text": "DiffNote#ensure_original_discussion_id",
            "value": "DiffNote#ensure_original_discussion_id"
          },
          {
            "selected": false,
            "text": "DiffNote#update_position",
            "value": "DiffNote#update_position"
          },
          {
            "selected": false,
            "text": "DiffNote.resolve!",
            "value": "DiffNote.resolve!"
          },
          {
            "selected": false,
            "text": "DiffNote.unresolve!",
            "value": "DiffNote.unresolve!"
          },
          {
            "selected": false,
            "text": "DroneCiService#push_valid?",
            "value": "DroneCiService#push_valid?"
          },
          {
            "selected": false,
            "text": "Email#unique_email",
            "value": "Email#unique_email"
          },
          {
            "selected": false,
            "text": "EmailsOnPushService#execute",
            "value": "EmailsOnPushService#execute"
          },
          {
            "selected": false,
            "text": "Environment#includes_commit?",
            "value": "Environment#includes_commit?"
          },
          {
            "selected": false,
            "text": "Environment#last_deployment",
            "value": "Environment#last_deployment"
          },
          {
            "selected": false,
            "text": "Event#action_name",
            "value": "Event#action_name"
          },
          {
            "selected": false,
            "text": "Event#commits_count",
            "value": "Event#commits_count"
          },
          {
            "selected": false,
            "text": "Event#last_push_to_non_root?",
            "value": "Event#last_push_to_non_root?"
          },
          {
            "selected": false,
            "text": "Event#new_ref?",
            "value": "Event#new_ref?"
          },
          {
            "selected": false,
            "text": "Event#project_name",
            "value": "Event#project_name"
          },
          {
            "selected": false,
            "text": "Event#push_with_commits?",
            "value": "Event#push_with_commits?"
          },
          {
            "selected": false,
            "text": "Event#recent_update?",
            "value": "Event#recent_update?"
          },
          {
            "selected": false,
            "text": "Event#reset_project_activity",
            "value": "Event#reset_project_activity"
          },
          {
            "selected": false,
            "text": "Event#try_obtain_lease",
            "value": "Event#try_obtain_lease"
          },
          {
            "selected": false,
            "text": "Event.contributions",
            "value": "Event.contributions"
          },
          {
            "selected": false,
            "text": "Event.limit_recent",
            "value": "Event.limit_recent"
          },
          {
            "selected": false,
            "text": "Event.reset_event_cache_for",
            "value": "Event.reset_event_cache_for"
          },
          {
            "selected": false,
            "text": "EventCreateService#close_issue",
            "value": "EventCreateService#close_issue"
          },
          {
            "selected": false,
            "text": "EventCreateService#close_milestone",
            "value": "EventCreateService#close_milestone"
          },
          {
            "selected": false,
            "text": "EventCreateService#close_mr",
            "value": "EventCreateService#close_mr"
          },
          {
            "selected": false,
            "text": "EventCreateService#create_event",
            "value": "EventCreateService#create_event"
          },
          {
            "selected": false,
            "text": "EventCreateService#create_project",
            "value": "EventCreateService#create_project"
          },
          {
            "selected": false,
            "text": "EventCreateService#create_record_event",
            "value": "EventCreateService#create_record_event"
          },
          {
            "selected": false,
            "text": "EventCreateService#destroy_milestone",
            "value": "EventCreateService#destroy_milestone"
          },
          {
            "selected": false,
            "text": "EventCreateService#join_project",
            "value": "EventCreateService#join_project"
          },
          {
            "selected": false,
            "text": "EventCreateService#leave_project",
            "value": "EventCreateService#leave_project"
          },
          {
            "selected": false,
            "text": "EventCreateService#open_issue",
            "value": "EventCreateService#open_issue"
          },
          {
            "selected": false,
            "text": "EventCreateService#open_milestone",
            "value": "EventCreateService#open_milestone"
          },
          {
            "selected": false,
            "text": "EventCreateService#open_mr",
            "value": "EventCreateService#open_mr"
          },
          {
            "selected": false,
            "text": "EventCreateService#push",
            "value": "EventCreateService#push"
          },
          {
            "selected": false,
            "text": "EventCreateService#reopen_issue",
            "value": "EventCreateService#reopen_issue"
          },
          {
            "selected": false,
            "text": "EventCreateService#reopen_milestone",
            "value": "EventCreateService#reopen_milestone"
          },
          {
            "selected": false,
            "text": "EventCreateService#reopen_mr",
            "value": "EventCreateService#reopen_mr"
          },
          {
            "selected": false,
            "text": "Files::BaseService#create_target_branch",
            "value": "Files::BaseService#create_target_branch"
          },
          {
            "selected": false,
            "text": "Files::BaseService#execute",
            "value": "Files::BaseService#execute"
          },
          {
            "selected": false,
            "text": "Files::BaseService#file_has_changed?",
            "value": "Files::BaseService#file_has_changed?"
          },
          {
            "selected": false,
            "text": "Files::BaseService#validate",
            "value": "Files::BaseService#validate"
          },
          {
            "selected": false,
            "text": "Files::CreateDirService#commit",
            "value": "Files::CreateDirService#commit"
          },
          {
            "selected": false,
            "text": "Files::CreateDirService#validate",
            "value": "Files::CreateDirService#validate"
          },
          {
            "selected": false,
            "text": "Files::CreateService#commit",
            "value": "Files::CreateService#commit"
          },
          {
            "selected": false,
            "text": "Files::CreateService#validate",
            "value": "Files::CreateService#validate"
          },
          {
            "selected": false,
            "text": "Files::DeleteService#commit",
            "value": "Files::DeleteService#commit"
          },
          {
            "selected": false,
            "text": "Files::UpdateService#commit",
            "value": "Files::UpdateService#commit"
          },
          {
            "selected": false,
            "text": "Files::UpdateService#file_has_changed?",
            "value": "Files::UpdateService#file_has_changed?"
          },
          {
            "selected": false,
            "text": "Files::UpdateService#last_commit",
            "value": "Files::UpdateService#last_commit"
          },
          {
            "selected": false,
            "text": "Files::UpdateService#validate",
            "value": "Files::UpdateService#validate"
          },
          {
            "selected": false,
            "text": "GitHooksService#execute",
            "value": "GitHooksService#execute"
          },
          {
            "selected": false,
            "text": "GitHooksService#run_hook",
            "value": "GitHooksService#run_hook"
          },
          {
            "selected": false,
            "text": "Gitlab::Checks::ChangeAccess#exec",
            "value": "Gitlab::Checks::ChangeAccess#exec"
          },
          {
            "selected": false,
            "text": "Gitlab::Checks::ChangeAccess#initialize",
            "value": "Gitlab::Checks::ChangeAccess#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Checks::ChangeAccess#push_checks",
            "value": "Gitlab::Checks::ChangeAccess#push_checks"
          },
          {
            "selected": false,
            "text": "Gitlab::Checks::ChangeAccess#tag_checks",
            "value": "Gitlab::Checks::ChangeAccess#tag_checks"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::DiffRefs#==",
            "value": "Gitlab::Diff::DiffRefs#=="
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::DiffRefs#base_sha",
            "value": "Gitlab::Diff::DiffRefs#base_sha"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::DiffRefs#complete?",
            "value": "Gitlab::Diff::DiffRefs#complete?"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::DiffRefs#head_sha",
            "value": "Gitlab::Diff::DiffRefs#head_sha"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::DiffRefs#initialize",
            "value": "Gitlab::Diff::DiffRefs#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::DiffRefs#start_sha",
            "value": "Gitlab::Diff::DiffRefs#start_sha"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#a_mode",
            "value": "Gitlab::Diff::File#a_mode"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#added_lines",
            "value": "Gitlab::Diff::File#added_lines"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#b_mode",
            "value": "Gitlab::Diff::File#b_mode"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#blob",
            "value": "Gitlab::Diff::File#blob"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#collapsed?",
            "value": "Gitlab::Diff::File#collapsed?"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#content_commit",
            "value": "Gitlab::Diff::File#content_commit"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#deleted_file",
            "value": "Gitlab::Diff::File#deleted_file"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#diff",
            "value": "Gitlab::Diff::File#diff"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#diff_lines",
            "value": "Gitlab::Diff::File#diff_lines"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#diff_refs",
            "value": "Gitlab::Diff::File#diff_refs"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#file_path",
            "value": "Gitlab::Diff::File#file_path"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#highlighted_diff_lines",
            "value": "Gitlab::Diff::File#highlighted_diff_lines"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#initialize",
            "value": "Gitlab::Diff::File#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#line_code",
            "value": "Gitlab::Diff::File#line_code"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#line_code_for_position",
            "value": "Gitlab::Diff::File#line_code_for_position"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#line_for_line_code",
            "value": "Gitlab::Diff::File#line_for_line_code"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#line_for_position",
            "value": "Gitlab::Diff::File#line_for_position"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#mode_changed?",
            "value": "Gitlab::Diff::File#mode_changed?"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#new_file",
            "value": "Gitlab::Diff::File#new_file"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#new_path",
            "value": "Gitlab::Diff::File#new_path"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#new_ref",
            "value": "Gitlab::Diff::File#new_ref"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#old_blob",
            "value": "Gitlab::Diff::File#old_blob"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#old_path",
            "value": "Gitlab::Diff::File#old_path"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#old_ref",
            "value": "Gitlab::Diff::File#old_ref"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#parallel_diff_lines",
            "value": "Gitlab::Diff::File#parallel_diff_lines"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#position",
            "value": "Gitlab::Diff::File#position"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#raw_diff",
            "value": "Gitlab::Diff::File#raw_diff"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#removed_lines",
            "value": "Gitlab::Diff::File#removed_lines"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#renamed_file",
            "value": "Gitlab::Diff::File#renamed_file"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#submodule?",
            "value": "Gitlab::Diff::File#submodule?"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::File#too_large?",
            "value": "Gitlab::Diff::File#too_large?"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Highlight#diff_file",
            "value": "Gitlab::Diff::Highlight#diff_file"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Highlight#diff_new_path",
            "value": "Gitlab::Diff::Highlight#diff_new_path"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Highlight#diff_new_ref",
            "value": "Gitlab::Diff::Highlight#diff_new_ref"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Highlight#diff_old_path",
            "value": "Gitlab::Diff::Highlight#diff_old_path"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Highlight#diff_old_ref",
            "value": "Gitlab::Diff::Highlight#diff_old_ref"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Highlight#highlight",
            "value": "Gitlab::Diff::Highlight#highlight"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Highlight#highlight_line",
            "value": "Gitlab::Diff::Highlight#highlight_line"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Highlight#initialize",
            "value": "Gitlab::Diff::Highlight#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Highlight#inline_diffs",
            "value": "Gitlab::Diff::Highlight#inline_diffs"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Highlight#new_lines",
            "value": "Gitlab::Diff::Highlight#new_lines"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Highlight#old_lines",
            "value": "Gitlab::Diff::Highlight#old_lines"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::InlineDiff#initialize",
            "value": "Gitlab::Diff::InlineDiff#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::InlineDiff#inline_diffs",
            "value": "Gitlab::Diff::InlineDiff#inline_diffs"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::InlineDiff#longest_common_prefix",
            "value": "Gitlab::Diff::InlineDiff#longest_common_prefix"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::InlineDiff#longest_common_suffix",
            "value": "Gitlab::Diff::InlineDiff#longest_common_suffix"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::InlineDiff#old_line",
            "value": "Gitlab::Diff::InlineDiff#old_line"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::InlineDiff.find_changed_line_pairs",
            "value": "Gitlab::Diff::InlineDiff.find_changed_line_pairs"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::InlineDiff.for_lines",
            "value": "Gitlab::Diff::InlineDiff.for_lines"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::InlineDiffMarker#collapse_ranges",
            "value": "Gitlab::Diff::InlineDiffMarker#collapse_ranges"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::InlineDiffMarker#html_class_names",
            "value": "Gitlab::Diff::InlineDiffMarker#html_class_names"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::InlineDiffMarker#initialize",
            "value": "Gitlab::Diff::InlineDiffMarker#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::InlineDiffMarker#insert_around_range",
            "value": "Gitlab::Diff::InlineDiffMarker#insert_around_range"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::InlineDiffMarker#mark",
            "value": "Gitlab::Diff::InlineDiffMarker#mark"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::InlineDiffMarker#position_mapping",
            "value": "Gitlab::Diff::InlineDiffMarker#position_mapping"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::InlineDiffMarker#rich_line",
            "value": "Gitlab::Diff::InlineDiffMarker#rich_line"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#added?",
            "value": "Gitlab::Diff::Line#added?"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#as_json",
            "value": "Gitlab::Diff::Line#as_json"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#index",
            "value": "Gitlab::Diff::Line#index"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#initialize",
            "value": "Gitlab::Diff::Line#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#meta?",
            "value": "Gitlab::Diff::Line#meta?"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#new_line",
            "value": "Gitlab::Diff::Line#new_line"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#new_pos",
            "value": "Gitlab::Diff::Line#new_pos"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#old_line",
            "value": "Gitlab::Diff::Line#old_line"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#old_pos",
            "value": "Gitlab::Diff::Line#old_pos"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#removed?",
            "value": "Gitlab::Diff::Line#removed?"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#rich_text",
            "value": "Gitlab::Diff::Line#rich_text"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#serialize_keys",
            "value": "Gitlab::Diff::Line#serialize_keys"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#text",
            "value": "Gitlab::Diff::Line#text"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#text=",
            "value": "Gitlab::Diff::Line#text="
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#to_hash",
            "value": "Gitlab::Diff::Line#to_hash"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#type",
            "value": "Gitlab::Diff::Line#type"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line#unchanged?",
            "value": "Gitlab::Diff::Line#unchanged?"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Line.init_from_hash",
            "value": "Gitlab::Diff::Line.init_from_hash"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::LineCode.generate",
            "value": "Gitlab::Diff::LineCode.generate"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::LineMapper#diff_lines",
            "value": "Gitlab::Diff::LineMapper#diff_lines"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::LineMapper#map_line_number",
            "value": "Gitlab::Diff::LineMapper#map_line_number"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::LineMapper#new_to_old",
            "value": "Gitlab::Diff::LineMapper#new_to_old"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::LineMapper#old_to_new",
            "value": "Gitlab::Diff::LineMapper#old_to_new"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::ParallelDiff#parallelize",
            "value": "Gitlab::Diff::ParallelDiff#parallelize"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Parser#filename?",
            "value": "Gitlab::Diff::Parser#filename?"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Parser#identification_type",
            "value": "Gitlab::Diff::Parser#identification_type"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Parser#parse",
            "value": "Gitlab::Diff::Parser#parse"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#==",
            "value": "Gitlab::Diff::Position#=="
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#base_sha",
            "value": "Gitlab::Diff::Position#base_sha"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#diff_file",
            "value": "Gitlab::Diff::Position#diff_file"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#diff_refs",
            "value": "Gitlab::Diff::Position#diff_refs"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#encode_with",
            "value": "Gitlab::Diff::Position#encode_with"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#find_diff_file",
            "value": "Gitlab::Diff::Position#find_diff_file"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#head_sha",
            "value": "Gitlab::Diff::Position#head_sha"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#init_with",
            "value": "Gitlab::Diff::Position#init_with"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#initialize",
            "value": "Gitlab::Diff::Position#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#inspect",
            "value": "Gitlab::Diff::Position#inspect"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#key",
            "value": "Gitlab::Diff::Position#key"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#line_code",
            "value": "Gitlab::Diff::Position#line_code"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#new_line",
            "value": "Gitlab::Diff::Position#new_line"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#new_path",
            "value": "Gitlab::Diff::Position#new_path"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#old_line",
            "value": "Gitlab::Diff::Position#old_line"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#old_path",
            "value": "Gitlab::Diff::Position#old_path"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#paths",
            "value": "Gitlab::Diff::Position#paths"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#start_sha",
            "value": "Gitlab::Diff::Position#start_sha"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#to_h",
            "value": "Gitlab::Diff::Position#to_h"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::Position#to_json",
            "value": "Gitlab::Diff::Position#to_json"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::PositionTracer#diff_base_to_base",
            "value": "Gitlab::Diff::PositionTracer#diff_base_to_base"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::PositionTracer#diff_files",
            "value": "Gitlab::Diff::PositionTracer#diff_files"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::PositionTracer#diff_head_to_head",
            "value": "Gitlab::Diff::PositionTracer#diff_head_to_head"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::PositionTracer#new_diffs",
            "value": "Gitlab::Diff::PositionTracer#new_diffs"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::PositionTracer#trace",
            "value": "Gitlab::Diff::PositionTracer#trace"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::PositionTracer#trace_added_line",
            "value": "Gitlab::Diff::PositionTracer#trace_added_line"
          },
          {
            "selected": false,
            "text": "Gitlab::Diff::PositionTracer#trace_removed_line",
            "value": "Gitlab::Diff::PositionTracer#trace_removed_line"
          },
          {
            "selected": false,
            "text": "Gitlab::Git.ref_name",
            "value": "Gitlab::Git.ref_name"
          },
          {
            "selected": false,
            "text": "Gitlab::Git.tag_name",
            "value": "Gitlab::Git.tag_name"
          },
          {
            "selected": false,
            "text": "Gitlab::Git.version",
            "value": "Gitlab::Git.version"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Attributes#attributes",
            "value": "Gitlab::Git::Attributes#attributes"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Attributes#each_line",
            "value": "Gitlab::Git::Attributes#each_line"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Attributes#initialize",
            "value": "Gitlab::Git::Attributes#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Attributes#parse_attributes",
            "value": "Gitlab::Git::Attributes#parse_attributes"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Attributes#parse_file",
            "value": "Gitlab::Git::Attributes#parse_file"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Attributes#patterns",
            "value": "Gitlab::Git::Attributes#patterns"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blame#each",
            "value": "Gitlab::Git::Blame#each"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blame#initialize",
            "value": "Gitlab::Git::Blame#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blame#load_blame",
            "value": "Gitlab::Git::Blame#load_blame"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blame#process_raw_blame",
            "value": "Gitlab::Git::Blame#process_raw_blame"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::BlameLine#commit",
            "value": "Gitlab::Git::BlameLine#commit"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::BlameLine#initialize",
            "value": "Gitlab::Git::BlameLine#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::BlameLine#line",
            "value": "Gitlab::Git::BlameLine#line"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob#binary=",
            "value": "Gitlab::Git::Blob#binary="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob#binary?",
            "value": "Gitlab::Git::Blob#binary?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob#data",
            "value": "Gitlab::Git::Blob#data"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob#empty?",
            "value": "Gitlab::Git::Blob#empty?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob#has_lfs_version_key?",
            "value": "Gitlab::Git::Blob#has_lfs_version_key?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob#id=",
            "value": "Gitlab::Git::Blob#id="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob#initialize",
            "value": "Gitlab::Git::Blob#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob#lfs_pointer?",
            "value": "Gitlab::Git::Blob#lfs_pointer?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob#load_all_data!",
            "value": "Gitlab::Git::Blob#load_all_data!"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob#name",
            "value": "Gitlab::Git::Blob#name"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob#name=",
            "value": "Gitlab::Git::Blob#name="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob#size=",
            "value": "Gitlab::Git::Blob#size="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob#truncated?",
            "value": "Gitlab::Git::Blob#truncated?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob.commit",
            "value": "Gitlab::Git::Blob.commit"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob.find",
            "value": "Gitlab::Git::Blob.find"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob.find_entry_by_path",
            "value": "Gitlab::Git::Blob.find_entry_by_path"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob.remove",
            "value": "Gitlab::Git::Blob.remove"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Blob.rename",
            "value": "Gitlab::Git::Blob.rename"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#==",
            "value": "Gitlab::Git::Commit#=="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#author_email",
            "value": "Gitlab::Git::Commit#author_email"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#author_email=",
            "value": "Gitlab::Git::Commit#author_email="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#author_name",
            "value": "Gitlab::Git::Commit#author_name"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#author_name=",
            "value": "Gitlab::Git::Commit#author_name="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#authored_date=",
            "value": "Gitlab::Git::Commit#authored_date="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#committed_date",
            "value": "Gitlab::Git::Commit#committed_date"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#committed_date=",
            "value": "Gitlab::Git::Commit#committed_date="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#committer_email",
            "value": "Gitlab::Git::Commit#committer_email"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#committer_email=",
            "value": "Gitlab::Git::Commit#committer_email="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#committer_name",
            "value": "Gitlab::Git::Commit#committer_name"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#committer_name=",
            "value": "Gitlab::Git::Commit#committer_name="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#diff_from_parent",
            "value": "Gitlab::Git::Commit#diff_from_parent"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#different_committer?",
            "value": "Gitlab::Git::Commit#different_committer?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#diffs",
            "value": "Gitlab::Git::Commit#diffs"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#id",
            "value": "Gitlab::Git::Commit#id"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#id=",
            "value": "Gitlab::Git::Commit#id="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#init_from_hash",
            "value": "Gitlab::Git::Commit#init_from_hash"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#init_from_rugged",
            "value": "Gitlab::Git::Commit#init_from_rugged"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#initialize",
            "value": "Gitlab::Git::Commit#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#message",
            "value": "Gitlab::Git::Commit#message"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#message=",
            "value": "Gitlab::Git::Commit#message="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#parent_id",
            "value": "Gitlab::Git::Commit#parent_id"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#parent_ids=",
            "value": "Gitlab::Git::Commit#parent_ids="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#parents",
            "value": "Gitlab::Git::Commit#parents"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#ref_names",
            "value": "Gitlab::Git::Commit#ref_names"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#refs",
            "value": "Gitlab::Git::Commit#refs"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#safe_message",
            "value": "Gitlab::Git::Commit#safe_message"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#serialize_keys",
            "value": "Gitlab::Git::Commit#serialize_keys"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#sha",
            "value": "Gitlab::Git::Commit#sha"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#short_id",
            "value": "Gitlab::Git::Commit#short_id"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#to_diff",
            "value": "Gitlab::Git::Commit#to_diff"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#to_hash",
            "value": "Gitlab::Git::Commit#to_hash"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#to_patch",
            "value": "Gitlab::Git::Commit#to_patch"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit#tree",
            "value": "Gitlab::Git::Commit#tree"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit.between",
            "value": "Gitlab::Git::Commit.between"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit.decorate",
            "value": "Gitlab::Git::Commit.decorate"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit.diff_from_parent",
            "value": "Gitlab::Git::Commit.diff_from_parent"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit.find",
            "value": "Gitlab::Git::Commit.find"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit.last_for_path",
            "value": "Gitlab::Git::Commit.last_for_path"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Commit.where",
            "value": "Gitlab::Git::Commit.where"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Compare#commits",
            "value": "Gitlab::Git::Compare#commits"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Compare#diffs",
            "value": "Gitlab::Git::Compare#diffs"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Compare#initialize",
            "value": "Gitlab::Git::Compare#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#deleted_file",
            "value": "Gitlab::Git::Diff#deleted_file"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#init_from_hash",
            "value": "Gitlab::Git::Diff#init_from_hash"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#init_from_rugged",
            "value": "Gitlab::Git::Diff#init_from_rugged"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#init_from_rugged_patch",
            "value": "Gitlab::Git::Diff#init_from_rugged_patch"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#initialize",
            "value": "Gitlab::Git::Diff#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#line_count",
            "value": "Gitlab::Git::Diff#line_count"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#new_path",
            "value": "Gitlab::Git::Diff#new_path"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#old_path",
            "value": "Gitlab::Git::Diff#old_path"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#old_path=",
            "value": "Gitlab::Git::Diff#old_path="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#patch_size",
            "value": "Gitlab::Git::Diff#patch_size"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#prune_collapsed_diff!",
            "value": "Gitlab::Git::Diff#prune_collapsed_diff!"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#serialize_keys",
            "value": "Gitlab::Git::Diff#serialize_keys"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#strip_diff_headers",
            "value": "Gitlab::Git::Diff#strip_diff_headers"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#submodule?",
            "value": "Gitlab::Git::Diff#submodule?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#to_hash",
            "value": "Gitlab::Git::Diff#to_hash"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff#too_large?",
            "value": "Gitlab::Git::Diff#too_large?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff.between",
            "value": "Gitlab::Git::Diff.between"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Diff.filter_diff_options",
            "value": "Gitlab::Git::Diff.filter_diff_options"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::DiffCollection#decorate!",
            "value": "Gitlab::Git::DiffCollection#decorate!"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::DiffCollection#each",
            "value": "Gitlab::Git::DiffCollection#each"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::DiffCollection#each_delta",
            "value": "Gitlab::Git::DiffCollection#each_delta"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::DiffCollection#each_patch",
            "value": "Gitlab::Git::DiffCollection#each_patch"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::DiffCollection#empty?",
            "value": "Gitlab::Git::DiffCollection#empty?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::DiffCollection#initialize",
            "value": "Gitlab::Git::DiffCollection#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::DiffCollection#overflow?",
            "value": "Gitlab::Git::DiffCollection#overflow?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::DiffCollection#populate!",
            "value": "Gitlab::Git::DiffCollection#populate!"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::DiffCollection#size",
            "value": "Gitlab::Git::DiffCollection#size"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::PathHelper.normalize_path",
            "value": "Gitlab::Git::PathHelper.normalize_path"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Ref#initialize",
            "value": "Gitlab::Git::Ref#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Ref#name",
            "value": "Gitlab::Git::Ref#name"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Ref#target",
            "value": "Gitlab::Git::Ref#target"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Ref.dereference_object",
            "value": "Gitlab::Git::Ref.dereference_object"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Ref.extract_branch_name",
            "value": "Gitlab::Git::Ref.extract_branch_name"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#archive_file_path",
            "value": "Gitlab::Git::Repository#archive_file_path"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#archive_metadata",
            "value": "Gitlab::Git::Repository#archive_metadata"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#attributes",
            "value": "Gitlab::Git::Repository#attributes"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#autocrlf",
            "value": "Gitlab::Git::Repository#autocrlf"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#blob_content",
            "value": "Gitlab::Git::Repository#blob_content"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#branch_names",
            "value": "Gitlab::Git::Repository#branch_names"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#branches",
            "value": "Gitlab::Git::Repository#branches"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#commits_between",
            "value": "Gitlab::Git::Repository#commits_between"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#copy_gitattributes",
            "value": "Gitlab::Git::Repository#copy_gitattributes"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#count_commits_between",
            "value": "Gitlab::Git::Repository#count_commits_between"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#diff",
            "value": "Gitlab::Git::Repository#diff"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#diff_patches",
            "value": "Gitlab::Git::Repository#diff_patches"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#diffable?",
            "value": "Gitlab::Git::Repository#diffable?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#discover_default_branch",
            "value": "Gitlab::Git::Repository#discover_default_branch"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#empty?",
            "value": "Gitlab::Git::Repository#empty?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#find_branch",
            "value": "Gitlab::Git::Repository#find_branch"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#find_commits",
            "value": "Gitlab::Git::Repository#find_commits"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#initialize",
            "value": "Gitlab::Git::Repository#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#local_branches",
            "value": "Gitlab::Git::Repository#local_branches"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#log",
            "value": "Gitlab::Git::Repository#log"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#log_by_shell",
            "value": "Gitlab::Git::Repository#log_by_shell"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#log_by_walk",
            "value": "Gitlab::Git::Repository#log_by_walk"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#lookup",
            "value": "Gitlab::Git::Repository#lookup"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#ls_files",
            "value": "Gitlab::Git::Repository#ls_files"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#merge_base_commit",
            "value": "Gitlab::Git::Repository#merge_base_commit"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#mkdir",
            "value": "Gitlab::Git::Repository#mkdir"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#parse_gitmodules",
            "value": "Gitlab::Git::Repository#parse_gitmodules"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#path",
            "value": "Gitlab::Git::Repository#path"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#raw",
            "value": "Gitlab::Git::Repository#raw"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#refs_hash",
            "value": "Gitlab::Git::Repository#refs_hash"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#remote_add",
            "value": "Gitlab::Git::Repository#remote_add"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#remote_delete",
            "value": "Gitlab::Git::Repository#remote_delete"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#rev_parse_target",
            "value": "Gitlab::Git::Repository#rev_parse_target"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#root_ref",
            "value": "Gitlab::Git::Repository#root_ref"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#rugged",
            "value": "Gitlab::Git::Repository#rugged"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#rugged_head",
            "value": "Gitlab::Git::Repository#rugged_head"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#sha_from_ref",
            "value": "Gitlab::Git::Repository#sha_from_ref"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#submodules",
            "value": "Gitlab::Git::Repository#submodules"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#tag_names",
            "value": "Gitlab::Git::Repository#tag_names"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#tags",
            "value": "Gitlab::Git::Repository#tags"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Repository#tree_entry",
            "value": "Gitlab::Git::Repository#tree_entry"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tag#initialize",
            "value": "Gitlab::Git::Tag#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tag#message",
            "value": "Gitlab::Git::Tag#message"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#commit_id=",
            "value": "Gitlab::Git::Tree#commit_id="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#contributing?",
            "value": "Gitlab::Git::Tree#contributing?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#dir?",
            "value": "Gitlab::Git::Tree#dir?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#file?",
            "value": "Gitlab::Git::Tree#file?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#id=",
            "value": "Gitlab::Git::Tree#id="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#initialize",
            "value": "Gitlab::Git::Tree#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#mode",
            "value": "Gitlab::Git::Tree#mode"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#mode=",
            "value": "Gitlab::Git::Tree#mode="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#name",
            "value": "Gitlab::Git::Tree#name"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#name=",
            "value": "Gitlab::Git::Tree#name="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#path=",
            "value": "Gitlab::Git::Tree#path="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#readme?",
            "value": "Gitlab::Git::Tree#readme?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#root_id=",
            "value": "Gitlab::Git::Tree#root_id="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#submodule?",
            "value": "Gitlab::Git::Tree#submodule?"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#type",
            "value": "Gitlab::Git::Tree#type"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree#type=",
            "value": "Gitlab::Git::Tree#type="
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree.find_id_by_path",
            "value": "Gitlab::Git::Tree.find_id_by_path"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Tree.where",
            "value": "Gitlab::Git::Tree.where"
          },
          {
            "selected": false,
            "text": "Gitlab::Git::Util.count_lines",
            "value": "Gitlab::Git::Util.count_lines"
          },
          {
            "selected": false,
            "text": "Gitlab::GitAccess#actor",
            "value": "Gitlab::GitAccess#actor"
          },
          {
            "selected": false,
            "text": "Gitlab::GitAccess#build_can_download_code?",
            "value": "Gitlab::GitAccess#build_can_download_code?"
          },
          {
            "selected": false,
            "text": "Gitlab::GitAccess#build_status_object",
            "value": "Gitlab::GitAccess#build_status_object"
          },
          {
            "selected": false,
            "text": "Gitlab::GitAccess#change_access_check",
            "value": "Gitlab::GitAccess#change_access_check"
          },
          {
            "selected": false,
            "text": "Gitlab::GitAccess#check",
            "value": "Gitlab::GitAccess#check"
          },
          {
            "selected": false,
            "text": "Gitlab::GitAccess#download_access_check",
            "value": "Gitlab::GitAccess#download_access_check"
          },
          {
            "selected": false,
            "text": "Gitlab::GitAccess#git_annex_branch_sync?",
            "value": "Gitlab::GitAccess#git_annex_branch_sync?"
          },
          {
            "selected": false,
            "text": "Gitlab::GitAccess#initialize",
            "value": "Gitlab::GitAccess#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::GitAccess#protocol_allowed?",
            "value": "Gitlab::GitAccess#protocol_allowed?"
          },
          {
            "selected": false,
            "text": "Gitlab::GitAccess#push_access_check",
            "value": "Gitlab::GitAccess#push_access_check"
          },
          {
            "selected": false,
            "text": "Gitlab::GitAccess#user",
            "value": "Gitlab::GitAccess#user"
          },
          {
            "selected": false,
            "text": "Gitlab::GitAccess#user_can_download_code?",
            "value": "Gitlab::GitAccess#user_can_download_code?"
          },
          {
            "selected": false,
            "text": "Gitlab::GitAccess#user_download_access_check",
            "value": "Gitlab::GitAccess#user_download_access_check"
          },
          {
            "selected": false,
            "text": "Gitlab::GitAccess#user_push_access_check",
            "value": "Gitlab::GitAccess#user_push_access_check"
          },
          {
            "selected": false,
            "text": "Gitlab::Highlight#custom_language",
            "value": "Gitlab::Highlight#custom_language"
          },
          {
            "selected": false,
            "text": "Gitlab::Highlight#highlight",
            "value": "Gitlab::Highlight#highlight"
          },
          {
            "selected": false,
            "text": "Gitlab::Highlight#initialize",
            "value": "Gitlab::Highlight#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::Highlight#lexer",
            "value": "Gitlab::Highlight#lexer"
          },
          {
            "selected": false,
            "text": "Gitlab::Highlight.highlight",
            "value": "Gitlab::Highlight.highlight"
          },
          {
            "selected": false,
            "text": "Gitlab::Highlight.highlight_lines",
            "value": "Gitlab::Highlight.highlight_lines"
          },
          {
            "selected": false,
            "text": "Gitlab::ReferenceExtractor#all",
            "value": "Gitlab::ReferenceExtractor#all"
          },
          {
            "selected": false,
            "text": "Gitlab::ReferenceExtractor#analyze",
            "value": "Gitlab::ReferenceExtractor#analyze"
          },
          {
            "selected": false,
            "text": "Gitlab::ReferenceExtractor#commits",
            "value": "Gitlab::ReferenceExtractor#commits"
          },
          {
            "selected": false,
            "text": "Gitlab::ReferenceExtractor#initialize",
            "value": "Gitlab::ReferenceExtractor#initialize"
          },
          {
            "selected": false,
            "text": "Gitlab::ReferenceExtractor#issues",
            "value": "Gitlab::ReferenceExtractor#issues"
          },
          {
            "selected": false,
            "text": "Gitlab::ReferenceExtractor#labels",
            "value": "Gitlab::ReferenceExtractor#labels"
          },
          {
            "selected": false,
            "text": "Gitlab::ReferenceExtractor#merge_requests",
            "value": "Gitlab::ReferenceExtractor#merge_requests"
          },
          {
            "selected": false,
            "text": "Gitlab::ReferenceExtractor#references",
            "value": "Gitlab::ReferenceExtractor#references"
          },
          {
            "selected": false,
            "text": "Gitlab::ReferenceExtractor#snippets",
            "value": "Gitlab::ReferenceExtractor#snippets"
          },
          {
            "selected": false,
            "text": "Gitlab::ReferenceExtractor#users",
            "value": "Gitlab::ReferenceExtractor#users"
          },
          {
            "selected": false,
            "text": "Gitlab::Shell#add_namespace",
            "value": "Gitlab::Shell#add_namespace"
          },
          {
            "selected": false,
            "text": "Gitlab::Shell#add_repository",
            "value": "Gitlab::Shell#add_repository"
          },
          {
            "selected": false,
            "text": "Gitlab::Shell#exists?",
            "value": "Gitlab::Shell#exists?"
          },
          {
            "selected": false,
            "text": "Gitlab::Shell#mv_namespace",
            "value": "Gitlab::Shell#mv_namespace"
          },
          {
            "selected": false,
            "text": "Gitlab::Shell#mv_repository",
            "value": "Gitlab::Shell#mv_repository"
          },
          {
            "selected": false,
            "text": "Gitlab::Shell#url_to_repo",
            "value": "Gitlab::Shell#url_to_repo"
          },
          {
            "selected": false,
            "text": "GravatarService#execute",
            "value": "GravatarService#execute"
          },
          {
            "selected": false,
            "text": "GravatarService#gravatar_url",
            "value": "GravatarService#gravatar_url"
          },
          {
            "selected": false,
            "text": "Group#actual_size_limit",
            "value": "Group#actual_size_limit"
          },
          {
            "selected": false,
            "text": "Group#add_users",
            "value": "Group#add_users"
          },
          {
            "selected": false,
            "text": "Group#first_non_empty_project",
            "value": "Group#first_non_empty_project"
          },
          {
            "selected": false,
            "text": "Group#has_master?",
            "value": "Group#has_master?"
          },
          {
            "selected": false,
            "text": "Group#last_owner?",
            "value": "Group#last_owner?"
          },
          {
            "selected": false,
            "text": "Group#post_destroy_hook",
            "value": "Group#post_destroy_hook"
          },
          {
            "selected": false,
            "text": "Group#visibility_level_allowed_by_projects",
            "value": "Group#visibility_level_allowed_by_projects"
          },
          {
            "selected": false,
            "text": "Group.search",
            "value": "Group.search"
          },
          {
            "selected": false,
            "text": "Group.visible_to_user",
            "value": "Group.visible_to_user"
          },
          {
            "selected": false,
            "text": "GroupMember#after_accept_invite",
            "value": "GroupMember#after_accept_invite"
          },
          {
            "selected": false,
            "text": "GroupMember#after_decline_invite",
            "value": "GroupMember#after_decline_invite"
          },
          {
            "selected": false,
            "text": "GroupMember#group",
            "value": "GroupMember#group"
          },
          {
            "selected": false,
            "text": "GroupMember#post_create_hook",
            "value": "GroupMember#post_create_hook"
          },
          {
            "selected": false,
            "text": "GroupMember#post_update_hook",
            "value": "GroupMember#post_update_hook"
          },
          {
            "selected": false,
            "text": "GroupMember#send_invite",
            "value": "GroupMember#send_invite"
          },
          {
            "selected": false,
            "text": "GroupMember.add_users_to_group",
            "value": "GroupMember.add_users_to_group"
          },
          {
            "selected": false,
            "text": "GroupProjectsFinder#execute",
            "value": "GroupProjectsFinder#execute"
          },
          {
            "selected": false,
            "text": "GroupProjectsFinder#group_projects",
            "value": "GroupProjectsFinder#group_projects"
          },
          {
            "selected": false,
            "text": "Groups::CreateService#execute",
            "value": "Groups::CreateService#execute"
          },
          {
            "selected": false,
            "text": "Groups::UpdateService#execute",
            "value": "Groups::UpdateService#execute"
          },
          {
            "selected": false,
            "text": "GroupsFinder#all_groups",
            "value": "GroupsFinder#all_groups"
          },
          {
            "selected": false,
            "text": "GroupsFinder#execute",
            "value": "GroupsFinder#execute"
          },
          {
            "selected": false,
            "text": "HamService#mark_as_ham!",
            "value": "HamService#mark_as_ham!"
          },
          {
            "selected": false,
            "text": "Issuable#card_attributes",
            "value": "Issuable#card_attributes"
          },
          {
            "selected": false,
            "text": "Issuable#labels_array",
            "value": "Issuable#labels_array"
          },
          {
            "selected": false,
            "text": "Issuable#notes_with_associations",
            "value": "Issuable#notes_with_associations"
          },
          {
            "selected": false,
            "text": "Issuable#open?",
            "value": "Issuable#open?"
          },
          {
            "selected": false,
            "text": "Issuable#record_metrics",
            "value": "Issuable#record_metrics"
          },
          {
            "selected": false,
            "text": "Issuable#subscribed_without_subscriptions?",
            "value": "Issuable#subscribed_without_subscriptions?"
          },
          {
            "selected": false,
            "text": "Issuable#to_ability_name",
            "value": "Issuable#to_ability_name"
          },
          {
            "selected": false,
            "text": "Issuable#to_hook_data",
            "value": "Issuable#to_hook_data"
          },
          {
            "selected": false,
            "text": "Issuable#today?",
            "value": "Issuable#today?"
          },
          {
            "selected": false,
            "text": "Issuable#updated_tasks",
            "value": "Issuable#updated_tasks"
          },
          {
            "selected": false,
            "text": "Issuable::BulkUpdateService#execute",
            "value": "Issuable::BulkUpdateService#execute"
          },
          {
            "selected": false,
            "text": "Issuable::ClassMethods#full_search",
            "value": "Issuable::ClassMethods#full_search"
          },
          {
            "selected": false,
            "text": "Issuable::ClassMethods#order_labels_priority",
            "value": "Issuable::ClassMethods#order_labels_priority"
          },
          {
            "selected": false,
            "text": "Issuable::ClassMethods#sort",
            "value": "Issuable::ClassMethods#sort"
          },
          {
            "selected": false,
            "text": "Issuable::ClassMethods#with_label",
            "value": "Issuable::ClassMethods#with_label"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#change_state",
            "value": "IssuableBaseService#change_state"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#change_subscription",
            "value": "IssuableBaseService#change_subscription"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#change_todo",
            "value": "IssuableBaseService#change_todo"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#create",
            "value": "IssuableBaseService#create"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#create_assignee_note",
            "value": "IssuableBaseService#create_assignee_note"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#create_branch_change_note",
            "value": "IssuableBaseService#create_branch_change_note"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#create_issuable",
            "value": "IssuableBaseService#create_issuable"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#create_labels_note",
            "value": "IssuableBaseService#create_labels_note"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#create_milestone_note",
            "value": "IssuableBaseService#create_milestone_note"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#create_task_status_note",
            "value": "IssuableBaseService#create_task_status_note"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#create_title_change_note",
            "value": "IssuableBaseService#create_title_change_note"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#filter_labels",
            "value": "IssuableBaseService#filter_labels"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#filter_labels_in_param",
            "value": "IssuableBaseService#filter_labels_in_param"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#filter_milestone",
            "value": "IssuableBaseService#filter_milestone"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#filter_params",
            "value": "IssuableBaseService#filter_params"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#handle_common_system_notes",
            "value": "IssuableBaseService#handle_common_system_notes"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#merge_slash_commands_into_params!",
            "value": "IssuableBaseService#merge_slash_commands_into_params!"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#process_label_ids",
            "value": "IssuableBaseService#process_label_ids"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#update",
            "value": "IssuableBaseService#update"
          },
          {
            "selected": false,
            "text": "IssuableBaseService#update_issuable",
            "value": "IssuableBaseService#update_issuable"
          },
          {
            "selected": false,
            "text": "IssuableFinder#assignee",
            "value": "IssuableFinder#assignee"
          },
          {
            "selected": false,
            "text": "IssuableFinder#assignee?",
            "value": "IssuableFinder#assignee?"
          },
          {
            "selected": false,
            "text": "IssuableFinder#author",
            "value": "IssuableFinder#author"
          },
          {
            "selected": false,
            "text": "IssuableFinder#author?",
            "value": "IssuableFinder#author?"
          },
          {
            "selected": false,
            "text": "IssuableFinder#by_assignee",
            "value": "IssuableFinder#by_assignee"
          },
          {
            "selected": false,
            "text": "IssuableFinder#by_author",
            "value": "IssuableFinder#by_author"
          },
          {
            "selected": false,
            "text": "IssuableFinder#by_due_date",
            "value": "IssuableFinder#by_due_date"
          },
          {
            "selected": false,
            "text": "IssuableFinder#by_label",
            "value": "IssuableFinder#by_label"
          },
          {
            "selected": false,
            "text": "IssuableFinder#by_milestone",
            "value": "IssuableFinder#by_milestone"
          },
          {
            "selected": false,
            "text": "IssuableFinder#by_project",
            "value": "IssuableFinder#by_project"
          },
          {
            "selected": false,
            "text": "IssuableFinder#by_scope",
            "value": "IssuableFinder#by_scope"
          },
          {
            "selected": false,
            "text": "IssuableFinder#by_search",
            "value": "IssuableFinder#by_search"
          },
          {
            "selected": false,
            "text": "IssuableFinder#by_state",
            "value": "IssuableFinder#by_state"
          },
          {
            "selected": false,
            "text": "IssuableFinder#by_weight",
            "value": "IssuableFinder#by_weight"
          },
          {
            "selected": false,
            "text": "IssuableFinder#due_date?",
            "value": "IssuableFinder#due_date?"
          },
          {
            "selected": false,
            "text": "IssuableFinder#execute",
            "value": "IssuableFinder#execute"
          },
          {
            "selected": false,
            "text": "IssuableFinder#filter_by_no_milestone?",
            "value": "IssuableFinder#filter_by_no_milestone?"
          },
          {
            "selected": false,
            "text": "IssuableFinder#group",
            "value": "IssuableFinder#group"
          },
          {
            "selected": false,
            "text": "IssuableFinder#init_collection",
            "value": "IssuableFinder#init_collection"
          },
          {
            "selected": false,
            "text": "IssuableFinder#initialize",
            "value": "IssuableFinder#initialize"
          },
          {
            "selected": false,
            "text": "IssuableFinder#label_names",
            "value": "IssuableFinder#label_names"
          },
          {
            "selected": false,
            "text": "IssuableFinder#labels",
            "value": "IssuableFinder#labels"
          },
          {
            "selected": false,
            "text": "IssuableFinder#labels?",
            "value": "IssuableFinder#labels?"
          },
          {
            "selected": false,
            "text": "IssuableFinder#milestones",
            "value": "IssuableFinder#milestones"
          },
          {
            "selected": false,
            "text": "IssuableFinder#milestones?",
            "value": "IssuableFinder#milestones?"
          },
          {
            "selected": false,
            "text": "IssuableFinder#project",
            "value": "IssuableFinder#project"
          },
          {
            "selected": false,
            "text": "IssuableFinder#project?",
            "value": "IssuableFinder#project?"
          },
          {
            "selected": false,
            "text": "IssuableFinder#projects",
            "value": "IssuableFinder#projects"
          },
          {
            "selected": false,
            "text": "IssuableFinder#search",
            "value": "IssuableFinder#search"
          },
          {
            "selected": false,
            "text": "IssuableFinder#sort",
            "value": "IssuableFinder#sort"
          },
          {
            "selected": false,
            "text": "IssuableFinder#weights?",
            "value": "IssuableFinder#weights?"
          },
          {
            "selected": false,
            "text": "Issue#attributes",
            "value": "Issue#attributes"
          },
          {
            "selected": false,
            "text": "Issue#closed_by_merge_requests",
            "value": "Issue#closed_by_merge_requests"
          },
          {
            "selected": false,
            "text": "Issue#locking_enabled?",
            "value": "Issue#locking_enabled?"
          },
          {
            "selected": false,
            "text": "Issue#referenced_merge_requests",
            "value": "Issue#referenced_merge_requests"
          },
          {
            "selected": false,
            "text": "Issue#related_branches",
            "value": "Issue#related_branches"
          },
          {
            "selected": false,
            "text": "Issue#to_reference",
            "value": "Issue#to_reference"
          },
          {
            "selected": false,
            "text": "Issue#update_assignee_cache_counts",
            "value": "Issue#update_assignee_cache_counts"
          },
          {
            "selected": false,
            "text": "Issue.owner_project",
            "value": "Issue.owner_project"
          },
          {
            "selected": false,
            "text": "Issue.sort",
            "value": "Issue.sort"
          },
          {
            "selected": false,
            "text": "Issue.visible_to_user",
            "value": "Issue.visible_to_user"
          },
          {
            "selected": false,
            "text": "Issue::Metrics#issue_assigned_to_list_label?",
            "value": "Issue::Metrics#issue_assigned_to_list_label?"
          },
          {
            "selected": false,
            "text": "Issue::Metrics#record!",
            "value": "Issue::Metrics#record!"
          },
          {
            "selected": false,
            "text": "Issues::BaseService#execute_hooks",
            "value": "Issues::BaseService#execute_hooks"
          },
          {
            "selected": false,
            "text": "Issues::BaseService#filter_params",
            "value": "Issues::BaseService#filter_params"
          },
          {
            "selected": false,
            "text": "Issues::BaseService#hook_data",
            "value": "Issues::BaseService#hook_data"
          },
          {
            "selected": false,
            "text": "Issues::CloseService#create_note",
            "value": "Issues::CloseService#create_note"
          },
          {
            "selected": false,
            "text": "Issues::CloseService#execute",
            "value": "Issues::CloseService#execute"
          },
          {
            "selected": false,
            "text": "Issues::CreateService#after_create",
            "value": "Issues::CreateService#after_create"
          },
          {
            "selected": false,
            "text": "Issues::CreateService#before_create",
            "value": "Issues::CreateService#before_create"
          },
          {
            "selected": false,
            "text": "Issues::CreateService#execute",
            "value": "Issues::CreateService#execute"
          },
          {
            "selected": false,
            "text": "Issues::CreateService#spam_service",
            "value": "Issues::CreateService#spam_service"
          },
          {
            "selected": false,
            "text": "Issues::MoveService#add_note_moved_from",
            "value": "Issues::MoveService#add_note_moved_from"
          },
          {
            "selected": false,
            "text": "Issues::MoveService#add_note_moved_to",
            "value": "Issues::MoveService#add_note_moved_to"
          },
          {
            "selected": false,
            "text": "Issues::MoveService#cloneable_label_ids",
            "value": "Issues::MoveService#cloneable_label_ids"
          },
          {
            "selected": false,
            "text": "Issues::MoveService#cloneable_milestone_id",
            "value": "Issues::MoveService#cloneable_milestone_id"
          },
          {
            "selected": false,
            "text": "Issues::MoveService#close_issue",
            "value": "Issues::MoveService#close_issue"
          },
          {
            "selected": false,
            "text": "Issues::MoveService#create_new_issue",
            "value": "Issues::MoveService#create_new_issue"
          },
          {
            "selected": false,
            "text": "Issues::MoveService#execute",
            "value": "Issues::MoveService#execute"
          },
          {
            "selected": false,
            "text": "Issues::MoveService#mark_as_moved",
            "value": "Issues::MoveService#mark_as_moved"
          },
          {
            "selected": false,
            "text": "Issues::MoveService#notify_participants",
            "value": "Issues::MoveService#notify_participants"
          },
          {
            "selected": false,
            "text": "Issues::MoveService#rewrite_content",
            "value": "Issues::MoveService#rewrite_content"
          },
          {
            "selected": false,
            "text": "Issues::MoveService#rewrite_notes",
            "value": "Issues::MoveService#rewrite_notes"
          },
          {
            "selected": false,
            "text": "Issues::ReopenService#create_note",
            "value": "Issues::ReopenService#create_note"
          },
          {
            "selected": false,
            "text": "Issues::ReopenService#execute",
            "value": "Issues::ReopenService#execute"
          },
          {
            "selected": false,
            "text": "Issues::UpdateService#create_confidentiality_note",
            "value": "Issues::UpdateService#create_confidentiality_note"
          },
          {
            "selected": false,
            "text": "Issues::UpdateService#execute",
            "value": "Issues::UpdateService#execute"
          },
          {
            "selected": false,
            "text": "Issues::UpdateService#handle_changes",
            "value": "Issues::UpdateService#handle_changes"
          },
          {
            "selected": false,
            "text": "IssuesFinder#iid_pattern",
            "value": "IssuesFinder#iid_pattern"
          },
          {
            "selected": false,
            "text": "IssuesFinder#init_collection",
            "value": "IssuesFinder#init_collection"
          },
          {
            "selected": false,
            "text": "JenkinsDeprecatedService#commit_status",
            "value": "JenkinsDeprecatedService#commit_status"
          },
          {
            "selected": false,
            "text": "JiraService#existing_comment?",
            "value": "JiraService#existing_comment?"
          },
          {
            "selected": false,
            "text": "JoinedGroupsFinder#all_groups",
            "value": "JoinedGroupsFinder#all_groups"
          },
          {
            "selected": false,
            "text": "JoinedGroupsFinder#execute",
            "value": "JoinedGroupsFinder#execute"
          },
          {
            "selected": false,
            "text": "Key#post_destroy_hook",
            "value": "Key#post_destroy_hook"
          },
          {
            "selected": false,
            "text": "Key#remove_from_shell",
            "value": "Key#remove_from_shell"
          },
          {
            "selected": false,
            "text": "Label#attributes",
            "value": "Label#attributes"
          },
          {
            "selected": false,
            "text": "Label#open_issues_count",
            "value": "Label#open_issues_count"
          },
          {
            "selected": false,
            "text": "Label#open_merge_requests_count",
            "value": "Label#open_merge_requests_count"
          },
          {
            "selected": false,
            "text": "Label#to_reference",
            "value": "Label#to_reference"
          },
          {
            "selected": false,
            "text": "Label.prioritized",
            "value": "Label.prioritized"
          },
          {
            "selected": false,
            "text": "Label.unprioritized",
            "value": "Label.unprioritized"
          },
          {
            "selected": false,
            "text": "LegacyDiffNote#active?",
            "value": "LegacyDiffNote#active?"
          },
          {
            "selected": false,
            "text": "LegacyDiffNote#find_noteable_diff",
            "value": "LegacyDiffNote#find_noteable_diff"
          },
          {
            "selected": false,
            "text": "LfsObject#project_allowed_access?",
            "value": "LfsObject#project_allowed_access?"
          },
          {
            "selected": false,
            "text": "LfsObject#storage_project",
            "value": "LfsObject#storage_project"
          },
          {
            "selected": false,
            "text": "License#method_missing",
            "value": "License#method_missing"
          },
          {
            "selected": false,
            "text": "License#valid_license",
            "value": "License#valid_license"
          },
          {
            "selected": false,
            "text": "License.block_changes?",
            "value": "License.block_changes?"
          },
          {
            "selected": false,
            "text": "License.load_license",
            "value": "License.load_license"
          },
          {
            "selected": false,
            "text": "Member#accept_request",
            "value": "Member#accept_request"
          },
          {
            "selected": false,
            "text": "Member#create_notification_setting",
            "value": "Member#create_notification_setting"
          },
          {
            "selected": false,
            "text": "Member#decline_invite!",
            "value": "Member#decline_invite!"
          },
          {
            "selected": false,
            "text": "Member#post_destroy_hook",
            "value": "Member#post_destroy_hook"
          },
          {
            "selected": false,
            "text": "Member.access_for_user_ids",
            "value": "Member.access_for_user_ids"
          },
          {
            "selected": false,
            "text": "Member.add_user",
            "value": "Member.add_user"
          },
          {
            "selected": false,
            "text": "Member.can_update_member?",
            "value": "Member.can_update_member?"
          },
          {
            "selected": false,
            "text": "Member.find_by_invite_token",
            "value": "Member.find_by_invite_token"
          },
          {
            "selected": false,
            "text": "Member.retrieve_user",
            "value": "Member.retrieve_user"
          },
          {
            "selected": false,
            "text": "Member.user_for_id",
            "value": "Member.user_for_id"
          },
          {
            "selected": false,
            "text": "Members::ApproveAccessRequestService#execute",
            "value": "Members::ApproveAccessRequestService#execute"
          },
          {
            "selected": false,
            "text": "Members::AuthorizedDestroyService#execute",
            "value": "Members::AuthorizedDestroyService#execute"
          },
          {
            "selected": false,
            "text": "Members::DestroyService#can_destroy_member?",
            "value": "Members::DestroyService#can_destroy_member?"
          },
          {
            "selected": false,
            "text": "Members::DestroyService#execute",
            "value": "Members::DestroyService#execute"
          },
          {
            "selected": false,
            "text": "Members::DestroyService#find_member!",
            "value": "Members::DestroyService#find_member!"
          },
          {
            "selected": false,
            "text": "Members::RequestAccessService#execute",
            "value": "Members::RequestAccessService#execute"
          },
          {
            "selected": false,
            "text": "Mentionable#all_references",
            "value": "Mentionable#all_references"
          },
          {
            "selected": false,
            "text": "Mentionable#create_cross_references!",
            "value": "Mentionable#create_cross_references!"
          },
          {
            "selected": false,
            "text": "Mentionable#create_new_cross_references!",
            "value": "Mentionable#create_new_cross_references!"
          },
          {
            "selected": false,
            "text": "Mentionable#cross_reference_exists?",
            "value": "Mentionable#cross_reference_exists?"
          },
          {
            "selected": false,
            "text": "Mentionable#detect_mentionable_changes",
            "value": "Mentionable#detect_mentionable_changes"
          },
          {
            "selected": false,
            "text": "Mentionable#gfm_reference",
            "value": "Mentionable#gfm_reference"
          },
          {
            "selected": false,
            "text": "Mentionable#mentioned_users",
            "value": "Mentionable#mentioned_users"
          },
          {
            "selected": false,
            "text": "Mentionable#referenced_mentionables",
            "value": "Mentionable#referenced_mentionables"
          },
          {
            "selected": false,
            "text": "MergeRequest#all_commits_sha",
            "value": "MergeRequest#all_commits_sha"
          },
          {
            "selected": false,
            "text": "MergeRequest#all_pipelines",
            "value": "MergeRequest#all_pipelines"
          },
          {
            "selected": false,
            "text": "MergeRequest#any_approver_allowed?",
            "value": "MergeRequest#any_approver_allowed?"
          },
          {
            "selected": false,
            "text": "MergeRequest#approvals_left",
            "value": "MergeRequest#approvals_left"
          },
          {
            "selected": false,
            "text": "MergeRequest#approver_ids=",
            "value": "MergeRequest#approver_ids="
          },
          {
            "selected": false,
            "text": "MergeRequest#approvers_left",
            "value": "MergeRequest#approvers_left"
          },
          {
            "selected": false,
            "text": "MergeRequest#attributes",
            "value": "MergeRequest#attributes"
          },
          {
            "selected": false,
            "text": "MergeRequest#branch_missing?",
            "value": "MergeRequest#branch_missing?"
          },
          {
            "selected": false,
            "text": "MergeRequest#cache_merge_request_closes_issues!",
            "value": "MergeRequest#cache_merge_request_closes_issues!"
          },
          {
            "selected": false,
            "text": "MergeRequest#can_approve?",
            "value": "MergeRequest#can_approve?"
          },
          {
            "selected": false,
            "text": "MergeRequest#check_if_can_be_merged",
            "value": "MergeRequest#check_if_can_be_merged"
          },
          {
            "selected": false,
            "text": "MergeRequest#closed_event",
            "value": "MergeRequest#closed_event"
          },
          {
            "selected": false,
            "text": "MergeRequest#compute_diverged_commits_count",
            "value": "MergeRequest#compute_diverged_commits_count"
          },
          {
            "selected": false,
            "text": "MergeRequest#conflicts_can_be_resolved_in_ui?",
            "value": "MergeRequest#conflicts_can_be_resolved_in_ui?"
          },
          {
            "selected": false,
            "text": "MergeRequest#discussions_resolvable?",
            "value": "MergeRequest#discussions_resolvable?"
          },
          {
            "selected": false,
            "text": "MergeRequest#discussions_resolved?",
            "value": "MergeRequest#discussions_resolved?"
          },
          {
            "selected": false,
            "text": "MergeRequest#diverged_commits_count",
            "value": "MergeRequest#diverged_commits_count"
          },
          {
            "selected": false,
            "text": "MergeRequest#diverged_from_target_branch?",
            "value": "MergeRequest#diverged_from_target_branch?"
          },
          {
            "selected": false,
            "text": "MergeRequest#environments",
            "value": "MergeRequest#environments"
          },
          {
            "selected": false,
            "text": "MergeRequest#find_diff_discussion",
            "value": "MergeRequest#find_diff_discussion"
          },
          {
            "selected": false,
            "text": "MergeRequest#forked_source_project_missing?",
            "value": "MergeRequest#forked_source_project_missing?"
          },
          {
            "selected": false,
            "text": "MergeRequest#has_ci?",
            "value": "MergeRequest#has_ci?"
          },
          {
            "selected": false,
            "text": "MergeRequest#hook_attrs",
            "value": "MergeRequest#hook_attrs"
          },
          {
            "selected": false,
            "text": "MergeRequest#likely_diff_base_commit",
            "value": "MergeRequest#likely_diff_base_commit"
          },
          {
            "selected": false,
            "text": "MergeRequest#locked_long_ago?",
            "value": "MergeRequest#locked_long_ago?"
          },
          {
            "selected": false,
            "text": "MergeRequest#locking_enabled?",
            "value": "MergeRequest#locking_enabled?"
          },
          {
            "selected": false,
            "text": "MergeRequest#merge_event",
            "value": "MergeRequest#merge_event"
          },
          {
            "selected": false,
            "text": "MergeRequest#mr_and_commit_notes",
            "value": "MergeRequest#mr_and_commit_notes"
          },
          {
            "selected": false,
            "text": "MergeRequest#number_of_potential_approvers",
            "value": "MergeRequest#number_of_potential_approvers"
          },
          {
            "selected": false,
            "text": "MergeRequest#overall_approvers",
            "value": "MergeRequest#overall_approvers"
          },
          {
            "selected": false,
            "text": "MergeRequest#ref_fetched?",
            "value": "MergeRequest#ref_fetched?"
          },
          {
            "selected": false,
            "text": "MergeRequest#reload_diff",
            "value": "MergeRequest#reload_diff"
          },
          {
            "selected": false,
            "text": "MergeRequest#reset_merge_when_build_succeeds",
            "value": "MergeRequest#reset_merge_when_build_succeeds"
          },
          {
            "selected": false,
            "text": "MergeRequest#source_branch_exists?",
            "value": "MergeRequest#source_branch_exists?"
          },
          {
            "selected": false,
            "text": "MergeRequest#target_branch_exists?",
            "value": "MergeRequest#target_branch_exists?"
          },
          {
            "selected": false,
            "text": "MergeRequest#to_reference",
            "value": "MergeRequest#to_reference"
          },
          {
            "selected": false,
            "text": "MergeRequest#update_assignee_cache_counts",
            "value": "MergeRequest#update_assignee_cache_counts"
          },
          {
            "selected": false,
            "text": "MergeRequest#update_diff_notes_positions",
            "value": "MergeRequest#update_diff_notes_positions"
          },
          {
            "selected": false,
            "text": "MergeRequest#validate_branches",
            "value": "MergeRequest#validate_branches"
          },
          {
            "selected": false,
            "text": "MergeRequest.in_projects",
            "value": "MergeRequest.in_projects"
          },
          {
            "selected": false,
            "text": "MergeRequestDiff#ensure_commits_sha",
            "value": "MergeRequestDiff#ensure_commits_sha"
          },
          {
            "selected": false,
            "text": "MergeRequestDiff#find_base_sha",
            "value": "MergeRequestDiff#find_base_sha"
          },
          {
            "selected": false,
            "text": "MergeRequestDiff#head_commit_sha",
            "value": "MergeRequestDiff#head_commit_sha"
          },
          {
            "selected": false,
            "text": "MergeRequestDiff#last_commit",
            "value": "MergeRequestDiff#last_commit"
          },
          {
            "selected": false,
            "text": "MergeRequestDiff#load_diffs",
            "value": "MergeRequestDiff#load_diffs"
          },
          {
            "selected": false,
            "text": "MergeRequestDiff#save_commits",
            "value": "MergeRequestDiff#save_commits"
          },
          {
            "selected": false,
            "text": "MergeRequestDiff#save_diffs",
            "value": "MergeRequestDiff#save_diffs"
          },
          {
            "selected": false,
            "text": "MergeRequestDiff#update_columns_serialized",
            "value": "MergeRequestDiff#update_columns_serialized"
          },
          {
            "selected": false,
            "text": "MergeRequestDiff.select_without_diff",
            "value": "MergeRequestDiff.select_without_diff"
          },
          {
            "selected": false,
            "text": "MergeRequests::AddTodoWhenBuildFailsService#close",
            "value": "MergeRequests::AddTodoWhenBuildFailsService#close"
          },
          {
            "selected": false,
            "text": "MergeRequests::ApprovalService#create_approval_note",
            "value": "MergeRequests::ApprovalService#create_approval_note"
          },
          {
            "selected": false,
            "text": "MergeRequests::ApprovalService#execute",
            "value": "MergeRequests::ApprovalService#execute"
          },
          {
            "selected": false,
            "text": "MergeRequests::ApprovalService#mark_pending_todos_as_done",
            "value": "MergeRequests::ApprovalService#mark_pending_todos_as_done"
          },
          {
            "selected": false,
            "text": "MergeRequests::AssignIssuesService#assignable_issues",
            "value": "MergeRequests::AssignIssuesService#assignable_issues"
          },
          {
            "selected": false,
            "text": "MergeRequests::AssignIssuesService#closes_issues",
            "value": "MergeRequests::AssignIssuesService#closes_issues"
          },
          {
            "selected": false,
            "text": "MergeRequests::AssignIssuesService#execute",
            "value": "MergeRequests::AssignIssuesService#execute"
          },
          {
            "selected": false,
            "text": "MergeRequests::BaseService#create_note",
            "value": "MergeRequests::BaseService#create_note"
          },
          {
            "selected": false,
            "text": "MergeRequests::BaseService#create_title_change_note",
            "value": "MergeRequests::BaseService#create_title_change_note"
          },
          {
            "selected": false,
            "text": "MergeRequests::BaseService#each_merge_request",
            "value": "MergeRequests::BaseService#each_merge_request"
          },
          {
            "selected": false,
            "text": "MergeRequests::BaseService#execute_hooks",
            "value": "MergeRequests::BaseService#execute_hooks"
          },
          {
            "selected": false,
            "text": "MergeRequests::BaseService#filter_params",
            "value": "MergeRequests::BaseService#filter_params"
          },
          {
            "selected": false,
            "text": "MergeRequests::BaseService#hook_data",
            "value": "MergeRequests::BaseService#hook_data"
          },
          {
            "selected": false,
            "text": "MergeRequests::BaseService#merge_request_from",
            "value": "MergeRequests::BaseService#merge_request_from"
          },
          {
            "selected": false,
            "text": "MergeRequests::BuildService#execute",
            "value": "MergeRequests::BuildService#execute"
          },
          {
            "selected": false,
            "text": "MergeRequests::BuildService#set_title_and_description",
            "value": "MergeRequests::BuildService#set_title_and_description"
          },
          {
            "selected": false,
            "text": "MergeRequests::CloseService#execute",
            "value": "MergeRequests::CloseService#execute"
          },
          {
            "selected": false,
            "text": "MergeRequests::CreateService#after_create",
            "value": "MergeRequests::CreateService#after_create"
          },
          {
            "selected": false,
            "text": "MergeRequests::CreateService#execute",
            "value": "MergeRequests::CreateService#execute"
          },
          {
            "selected": false,
            "text": "MergeRequests::MergeRequestDiffCacheService#execute",
            "value": "MergeRequests::MergeRequestDiffCacheService#execute"
          },
          {
            "selected": false,
            "text": "MergeRequests::MergeService#hooks_validation_pass?",
            "value": "MergeRequests::MergeService#hooks_validation_pass?"
          },
          {
            "selected": false,
            "text": "MergeRequests::MergeWhenBuildSucceedsService#cancel",
            "value": "MergeRequests::MergeWhenBuildSucceedsService#cancel"
          },
          {
            "selected": false,
            "text": "MergeRequests::MergeWhenBuildSucceedsService#execute",
            "value": "MergeRequests::MergeWhenBuildSucceedsService#execute"
          },
          {
            "selected": false,
            "text": "MergeRequests::ReopenService#execute",
            "value": "MergeRequests::ReopenService#execute"
          },
          {
            "selected": false,
            "text": "MergeRequests::ResolveService#execute",
            "value": "MergeRequests::ResolveService#execute"
          },
          {
            "selected": false,
            "text": "MergeRequests::ResolveService#fetch_their_commit!",
            "value": "MergeRequests::ResolveService#fetch_their_commit!"
          },
          {
            "selected": false,
            "text": "MergeRequests::ResolveService#write_resolved_file_to_index",
            "value": "MergeRequests::ResolveService#write_resolved_file_to_index"
          },
          {
            "selected": false,
            "text": "MergeRequests::ResolvedDiscussionNotificationService#execute",
            "value": "MergeRequests::ResolvedDiscussionNotificationService#execute"
          },
          {
            "selected": false,
            "text": "MergeRequests::UpdateService#after_update",
            "value": "MergeRequests::UpdateService#after_update"
          },
          {
            "selected": false,
            "text": "MergeRequests::UpdateService#execute",
            "value": "MergeRequests::UpdateService#execute"
          },
          {
            "selected": false,
            "text": "MergeRequests::UpdateService#handle_changes",
            "value": "MergeRequests::UpdateService#handle_changes"
          },
          {
            "selected": false,
            "text": "Milestone#attributes",
            "value": "Milestone#attributes"
          },
          {
            "selected": false,
            "text": "Milestone#sort_issues",
            "value": "Milestone#sort_issues"
          },
          {
            "selected": false,
            "text": "Milestone#to_reference",
            "value": "Milestone#to_reference"
          },
          {
            "selected": false,
            "text": "Milestone.search",
            "value": "Milestone.search"
          },
          {
            "selected": false,
            "text": "Milestone.upcoming_ids_by_projects",
            "value": "Milestone.upcoming_ids_by_projects"
          },
          {
            "selected": false,
            "text": "Milestones::CloseService#execute",
            "value": "Milestones::CloseService#execute"
          },
          {
            "selected": false,
            "text": "Milestones::CreateService#execute",
            "value": "Milestones::CreateService#execute"
          },
          {
            "selected": false,
            "text": "Milestones::DestroyService#execute",
            "value": "Milestones::DestroyService#execute"
          },
          {
            "selected": false,
            "text": "Milestones::ReopenService#execute",
            "value": "Milestones::ReopenService#execute"
          },
          {
            "selected": false,
            "text": "Milestones::UpdateService#execute",
            "value": "Milestones::UpdateService#execute"
          },
          {
            "selected": false,
            "text": "MilestonesFinder#execute",
            "value": "MilestonesFinder#execute"
          },
          {
            "selected": false,
            "text": "MoveToProjectFinder#execute",
            "value": "MoveToProjectFinder#execute"
          },
          {
            "selected": false,
            "text": "Namespace#actual_size_limit",
            "value": "Namespace#actual_size_limit"
          },
          {
            "selected": false,
            "text": "Namespace#any_project_has_container_registry_tags?",
            "value": "Namespace#any_project_has_container_registry_tags?"
          },
          {
            "selected": false,
            "text": "Namespace#find_fork_of",
            "value": "Namespace#find_fork_of"
          },
          {
            "selected": false,
            "text": "Namespace#move_dir",
            "value": "Namespace#move_dir"
          },
          {
            "selected": false,
            "text": "Namespace#repository_storage_paths",
            "value": "Namespace#repository_storage_paths"
          },
          {
            "selected": false,
            "text": "Namespace#rm_dir",
            "value": "Namespace#rm_dir"
          },
          {
            "selected": false,
            "text": "Namespace#send_update_instructions",
            "value": "Namespace#send_update_instructions"
          },
          {
            "selected": false,
            "text": "Namespace.by_path",
            "value": "Namespace.by_path"
          },
          {
            "selected": false,
            "text": "Namespace.clean_path",
            "value": "Namespace.clean_path"
          },
          {
            "selected": false,
            "text": "Namespace.find_by_path_or_name",
            "value": "Namespace.find_by_path_or_name"
          },
          {
            "selected": false,
            "text": "Nokogiri::HTML.fragment",
            "value": "Nokogiri::HTML.fragment"
          },
          {
            "selected": false,
            "text": "Nokogiri::HTML::Document.new",
            "value": "Nokogiri::HTML::Document.new"
          },
          {
            "selected": false,
            "text": "Nokogiri::HTML::Document.parse",
            "value": "Nokogiri::HTML::Document.parse"
          },
          {
            "selected": false,
            "text": "Nokogiri::HTML::Document.read_memory",
            "value": "Nokogiri::HTML::Document.read_memory"
          },
          {
            "selected": false,
            "text": "Nokogiri::XML::Document.parse",
            "value": "Nokogiri::XML::Document.parse"
          },
          {
            "selected": false,
            "text": "Nokogiri::XML::Document.read_memory",
            "value": "Nokogiri::XML::Document.read_memory"
          },
          {
            "selected": false,
            "text": "Note#attributes",
            "value": "Note#attributes"
          },
          {
            "selected": false,
            "text": "Note#build_discussion_id",
            "value": "Note#build_discussion_id"
          },
          {
            "selected": false,
            "text": "Note#ensure_discussion_id",
            "value": "Note#ensure_discussion_id"
          },
          {
            "selected": false,
            "text": "Note#has_referenced_mentionables?",
            "value": "Note#has_referenced_mentionables?"
          },
          {
            "selected": false,
            "text": "Note.grouped_diff_discussions",
            "value": "Note.grouped_diff_discussions"
          },
          {
            "selected": false,
            "text": "Note.search",
            "value": "Note.search"
          },
          {
            "selected": false,
            "text": "Notes::CreateService#execute",
            "value": "Notes::CreateService#execute"
          },
          {
            "selected": false,
            "text": "Notes::DeleteService#execute",
            "value": "Notes::DeleteService#execute"
          },
          {
            "selected": false,
            "text": "Notes::DiffPositionUpdateService#execute",
            "value": "Notes::DiffPositionUpdateService#execute"
          },
          {
            "selected": false,
            "text": "Notes::SlashCommandsService#execute",
            "value": "Notes::SlashCommandsService#execute"
          },
          {
            "selected": false,
            "text": "Notes::SlashCommandsService#extract_commands",
            "value": "Notes::SlashCommandsService#extract_commands"
          },
          {
            "selected": false,
            "text": "Notes::SlashCommandsService#supported?",
            "value": "Notes::SlashCommandsService#supported?"
          },
          {
            "selected": false,
            "text": "Notes::SlashCommandsService.supported?",
            "value": "Notes::SlashCommandsService.supported?"
          },
          {
            "selected": false,
            "text": "Notes::UpdateService#execute",
            "value": "Notes::UpdateService#execute"
          },
          {
            "selected": false,
            "text": "NotesFinder#execute",
            "value": "NotesFinder#execute"
          },
          {
            "selected": false,
            "text": "NotificationService#accept_group_invite",
            "value": "NotificationService#accept_group_invite"
          },
          {
            "selected": false,
            "text": "NotificationService#accept_project_invite",
            "value": "NotificationService#accept_project_invite"
          },
          {
            "selected": false,
            "text": "NotificationService#add_custom_notifications",
            "value": "NotificationService#add_custom_notifications"
          },
          {
            "selected": false,
            "text": "NotificationService#add_labels_subscribers",
            "value": "NotificationService#add_labels_subscribers"
          },
          {
            "selected": false,
            "text": "NotificationService#add_merge_request_approvers",
            "value": "NotificationService#add_merge_request_approvers"
          },
          {
            "selected": false,
            "text": "NotificationService#add_mr_approvers_email",
            "value": "NotificationService#add_mr_approvers_email"
          },
          {
            "selected": false,
            "text": "NotificationService#add_project_watchers",
            "value": "NotificationService#add_project_watchers"
          },
          {
            "selected": false,
            "text": "NotificationService#add_subscribed_users",
            "value": "NotificationService#add_subscribed_users"
          },
          {
            "selected": false,
            "text": "NotificationService#approve_mr",
            "value": "NotificationService#approve_mr"
          },
          {
            "selected": false,
            "text": "NotificationService#approve_mr_email",
            "value": "NotificationService#approve_mr_email"
          },
          {
            "selected": false,
            "text": "NotificationService#build_custom_key",
            "value": "NotificationService#build_custom_key"
          },
          {
            "selected": false,
            "text": "NotificationService#build_recipients",
            "value": "NotificationService#build_recipients"
          },
          {
            "selected": false,
            "text": "NotificationService#build_relabeled_recipients",
            "value": "NotificationService#build_relabeled_recipients"
          },
          {
            "selected": false,
            "text": "NotificationService#close_issue",
            "value": "NotificationService#close_issue"
          },
          {
            "selected": false,
            "text": "NotificationService#close_mr",
            "value": "NotificationService#close_mr"
          },
          {
            "selected": false,
            "text": "NotificationService#close_resource_email",
            "value": "NotificationService#close_resource_email"
          },
          {
            "selected": false,
            "text": "NotificationService#decline_access_request",
            "value": "NotificationService#decline_access_request"
          },
          {
            "selected": false,
            "text": "NotificationService#decline_group_invite",
            "value": "NotificationService#decline_group_invite"
          },
          {
            "selected": false,
            "text": "NotificationService#decline_project_invite",
            "value": "NotificationService#decline_project_invite"
          },
          {
            "selected": false,
            "text": "NotificationService#invite_group_member",
            "value": "NotificationService#invite_group_member"
          },
          {
            "selected": false,
            "text": "NotificationService#invite_project_member",
            "value": "NotificationService#invite_project_member"
          },
          {
            "selected": false,
            "text": "NotificationService#issue_moved",
            "value": "NotificationService#issue_moved"
          },
          {
            "selected": false,
            "text": "NotificationService#new_access_request",
            "value": "NotificationService#new_access_request"
          },
          {
            "selected": false,
            "text": "NotificationService#new_email",
            "value": "NotificationService#new_email"
          },
          {
            "selected": false,
            "text": "NotificationService#new_group_member",
            "value": "NotificationService#new_group_member"
          },
          {
            "selected": false,
            "text": "NotificationService#new_issue",
            "value": "NotificationService#new_issue"
          },
          {
            "selected": false,
            "text": "NotificationService#new_key",
            "value": "NotificationService#new_key"
          },
          {
            "selected": false,
            "text": "NotificationService#new_mentions_in_issue",
            "value": "NotificationService#new_mentions_in_issue"
          },
          {
            "selected": false,
            "text": "NotificationService#new_mentions_in_merge_request",
            "value": "NotificationService#new_mentions_in_merge_request"
          },
          {
            "selected": false,
            "text": "NotificationService#new_mentions_in_resource_email",
            "value": "NotificationService#new_mentions_in_resource_email"
          },
          {
            "selected": false,
            "text": "NotificationService#new_merge_request",
            "value": "NotificationService#new_merge_request"
          },
          {
            "selected": false,
            "text": "NotificationService#new_project_member",
            "value": "NotificationService#new_project_member"
          },
          {
            "selected": false,
            "text": "NotificationService#new_resource_email",
            "value": "NotificationService#new_resource_email"
          },
          {
            "selected": false,
            "text": "NotificationService#notification_settings_for",
            "value": "NotificationService#notification_settings_for"
          },
          {
            "selected": false,
            "text": "NotificationService#project_was_moved",
            "value": "NotificationService#project_was_moved"
          },
          {
            "selected": false,
            "text": "NotificationService#project_watchers",
            "value": "NotificationService#project_watchers"
          },
          {
            "selected": false,
            "text": "NotificationService#reassign_resource_email",
            "value": "NotificationService#reassign_resource_email"
          },
          {
            "selected": false,
            "text": "NotificationService#reassigned_issue",
            "value": "NotificationService#reassigned_issue"
          },
          {
            "selected": false,
            "text": "NotificationService#reassigned_merge_request",
            "value": "NotificationService#reassigned_merge_request"
          },
          {
            "selected": false,
            "text": "NotificationService#reject_mention_users",
            "value": "NotificationService#reject_mention_users"
          },
          {
            "selected": false,
            "text": "NotificationService#reject_muted_users",
            "value": "NotificationService#reject_muted_users"
          },
          {
            "selected": false,
            "text": "NotificationService#reject_unsubscribed_users",
            "value": "NotificationService#reject_unsubscribed_users"
          },
          {
            "selected": false,
            "text": "NotificationService#reject_users",
            "value": "NotificationService#reject_users"
          },
          {
            "selected": false,
            "text": "NotificationService#reject_users_without_access",
            "value": "NotificationService#reject_users_without_access"
          },
          {
            "selected": false,
            "text": "NotificationService#relabeled_issue",
            "value": "NotificationService#relabeled_issue"
          },
          {
            "selected": false,
            "text": "NotificationService#relabeled_merge_request",
            "value": "NotificationService#relabeled_merge_request"
          },
          {
            "selected": false,
            "text": "NotificationService#relabeled_resource_email",
            "value": "NotificationService#relabeled_resource_email"
          },
          {
            "selected": false,
            "text": "NotificationService#reopen_issue",
            "value": "NotificationService#reopen_issue"
          },
          {
            "selected": false,
            "text": "NotificationService#reopen_mr",
            "value": "NotificationService#reopen_mr"
          },
          {
            "selected": false,
            "text": "NotificationService#reopen_resource_email",
            "value": "NotificationService#reopen_resource_email"
          },
          {
            "selected": false,
            "text": "NotificationService#resolve_all_discussions",
            "value": "NotificationService#resolve_all_discussions"
          },
          {
            "selected": false,
            "text": "NotificationService#select_group_member_setting",
            "value": "NotificationService#select_group_member_setting"
          },
          {
            "selected": false,
            "text": "NotificationService#select_project_member_setting",
            "value": "NotificationService#select_project_member_setting"
          },
          {
            "selected": false,
            "text": "NotificationService#settings_with_global_level_of",
            "value": "NotificationService#settings_with_global_level_of"
          },
          {
            "selected": false,
            "text": "NotificationService#update_group_member",
            "value": "NotificationService#update_group_member"
          },
          {
            "selected": false,
            "text": "NotificationService#update_project_member",
            "value": "NotificationService#update_project_member"
          },
          {
            "selected": false,
            "text": "NotificationService#users_with_global_level_custom",
            "value": "NotificationService#users_with_global_level_custom"
          },
          {
            "selected": false,
            "text": "NotificationService#users_with_global_level_watch",
            "value": "NotificationService#users_with_global_level_watch"
          },
          {
            "selected": false,
            "text": "NotificationSetting.find_or_create_for",
            "value": "NotificationSetting.find_or_create_for"
          },
          {
            "selected": false,
            "text": "PagesDomain#update",
            "value": "PagesDomain#update"
          },
          {
            "selected": false,
            "text": "Participable#participants",
            "value": "Participable#participants"
          },
          {
            "selected": false,
            "text": "Participable#raw_participants",
            "value": "Participable#raw_participants"
          },
          {
            "selected": false,
            "text": "PathLock#path_unique_validation",
            "value": "PathLock#path_unique_validation"
          },
          {
            "selected": false,
            "text": "PathLocks::LockService#execute",
            "value": "PathLocks::LockService#execute"
          },
          {
            "selected": false,
            "text": "PathLocks::UnlockService#execute",
            "value": "PathLocks::UnlockService#execute"
          },
          {
            "selected": false,
            "text": "PersonalAccessToken.find_by_token",
            "value": "PersonalAccessToken.find_by_token"
          },
          {
            "selected": false,
            "text": "PersonalProjectsFinder#all_projects",
            "value": "PersonalProjectsFinder#all_projects"
          },
          {
            "selected": false,
            "text": "PersonalProjectsFinder#execute",
            "value": "PersonalProjectsFinder#execute"
          },
          {
            "selected": false,
            "text": "PipelinesFinder#branches",
            "value": "PipelinesFinder#branches"
          },
          {
            "selected": false,
            "text": "PipelinesFinder#execute",
            "value": "PipelinesFinder#execute"
          },
          {
            "selected": false,
            "text": "PipelinesFinder#from_ids",
            "value": "PipelinesFinder#from_ids"
          },
          {
            "selected": false,
            "text": "PipelinesFinder#ids_for_ref",
            "value": "PipelinesFinder#ids_for_ref"
          },
          {
            "selected": false,
            "text": "PipelinesFinder#initialize",
            "value": "PipelinesFinder#initialize"
          },
          {
            "selected": false,
            "text": "PipelinesFinder#tags",
            "value": "PipelinesFinder#tags"
          },
          {
            "selected": false,
            "text": "Project#above_size_limit?",
            "value": "Project#above_size_limit?"
          },
          {
            "selected": false,
            "text": "Project#actual_size_limit",
            "value": "Project#actual_size_limit"
          },
          {
            "selected": false,
            "text": "Project#add_import_job",
            "value": "Project#add_import_job"
          },
          {
            "selected": false,
            "text": "Project#allowed_to_share_with_group?",
            "value": "Project#allowed_to_share_with_group?"
          },
          {
            "selected": false,
            "text": "Project#any_runners?",
            "value": "Project#any_runners?"
          },
          {
            "selected": false,
            "text": "Project#approver_ids=",
            "value": "Project#approver_ids="
          },
          {
            "selected": false,
            "text": "Project#archive!",
            "value": "Project#archive!"
          },
          {
            "selected": false,
            "text": "Project#attributes",
            "value": "Project#attributes"
          },
          {
            "selected": false,
            "text": "Project#authorized_for_user?",
            "value": "Project#authorized_for_user?"
          },
          {
            "selected": false,
            "text": "Project#authorized_for_user_by_group?",
            "value": "Project#authorized_for_user_by_group?"
          },
          {
            "selected": false,
            "text": "Project#authorized_for_user_by_members?",
            "value": "Project#authorized_for_user_by_members?"
          },
          {
            "selected": false,
            "text": "Project#authorized_for_user_by_shared_projects?",
            "value": "Project#authorized_for_user_by_shared_projects?"
          },
          {
            "selected": false,
            "text": "Project#build_missing_services",
            "value": "Project#build_missing_services"
          },
          {
            "selected": false,
            "text": "Project#cache_has_external_issue_tracker",
            "value": "Project#cache_has_external_issue_tracker"
          },
          {
            "selected": false,
            "text": "Project#cache_has_external_wiki",
            "value": "Project#cache_has_external_wiki"
          },
          {
            "selected": false,
            "text": "Project#change_head",
            "value": "Project#change_head"
          },
          {
            "selected": false,
            "text": "Project#changes_will_exceed_size_limit?",
            "value": "Project#changes_will_exceed_size_limit?"
          },
          {
            "selected": false,
            "text": "Project#check_limit",
            "value": "Project#check_limit"
          },
          {
            "selected": false,
            "text": "Project#check_wiki_path_conflict",
            "value": "Project#check_wiki_path_conflict"
          },
          {
            "selected": false,
            "text": "Project#ci_service",
            "value": "Project#ci_service"
          },
          {
            "selected": false,
            "text": "Project#ci_services",
            "value": "Project#ci_services"
          },
          {
            "selected": false,
            "text": "Project#create_or_update_import_data",
            "value": "Project#create_or_update_import_data"
          },
          {
            "selected": false,
            "text": "Project#default_branch",
            "value": "Project#default_branch"
          },
          {
            "selected": false,
            "text": "Project#empty_repo?",
            "value": "Project#empty_repo?"
          },
          {
            "selected": false,
            "text": "Project#environments_for",
            "value": "Project#environments_for"
          },
          {
            "selected": false,
            "text": "Project#execute_hooks",
            "value": "Project#execute_hooks"
          },
          {
            "selected": false,
            "text": "Project#expire_caches_before_rename",
            "value": "Project#expire_caches_before_rename"
          },
          {
            "selected": false,
            "text": "Project#external_issue_tracker",
            "value": "Project#external_issue_tracker"
          },
          {
            "selected": false,
            "text": "Project#external_wiki",
            "value": "Project#external_wiki"
          },
          {
            "selected": false,
            "text": "Project#find_path_lock",
            "value": "Project#find_path_lock"
          },
          {
            "selected": false,
            "text": "Project#find_service",
            "value": "Project#find_service"
          },
          {
            "selected": false,
            "text": "Project#forked?",
            "value": "Project#forked?"
          },
          {
            "selected": false,
            "text": "Project#forked_from?",
            "value": "Project#forked_from?"
          },
          {
            "selected": false,
            "text": "Project#forks_count",
            "value": "Project#forks_count"
          },
          {
            "selected": false,
            "text": "Project#get_issue",
            "value": "Project#get_issue"
          },
          {
            "selected": false,
            "text": "Project#has_container_registry_tags?",
            "value": "Project#has_container_registry_tags?"
          },
          {
            "selected": false,
            "text": "Project#has_remote_mirror?",
            "value": "Project#has_remote_mirror?"
          },
          {
            "selected": false,
            "text": "Project#import_url=",
            "value": "Project#import_url="
          },
          {
            "selected": false,
            "text": "Project#latest_successful_builds_for",
            "value": "Project#latest_successful_builds_for"
          },
          {
            "selected": false,
            "text": "Project#mark_import_as_failed",
            "value": "Project#mark_import_as_failed"
          },
          {
            "selected": false,
            "text": "Project#mark_remote_mirrors_for_removal",
            "value": "Project#mark_remote_mirrors_for_removal"
          },
          {
            "selected": false,
            "text": "Project#merge_base_commit",
            "value": "Project#merge_base_commit"
          },
          {
            "selected": false,
            "text": "Project#mirror_ever_updated_successfully?",
            "value": "Project#mirror_ever_updated_successfully?"
          },
          {
            "selected": false,
            "text": "Project#mirror_last_update_status",
            "value": "Project#mirror_last_update_status"
          },
          {
            "selected": false,
            "text": "Project#mirror_updated?",
            "value": "Project#mirror_updated?"
          },
          {
            "selected": false,
            "text": "Project#origin_merge_requests",
            "value": "Project#origin_merge_requests"
          },
          {
            "selected": false,
            "text": "Project#owner",
            "value": "Project#owner"
          },
          {
            "selected": false,
            "text": "Project#personal?",
            "value": "Project#personal?"
          },
          {
            "selected": false,
            "text": "Project#pipeline_for",
            "value": "Project#pipeline_for"
          },
          {
            "selected": false,
            "text": "Project#remove_pages",
            "value": "Project#remove_pages"
          },
          {
            "selected": false,
            "text": "Project#rename_repo",
            "value": "Project#rename_repo"
          },
          {
            "selected": false,
            "text": "Project#repository_and_lfs_size",
            "value": "Project#repository_and_lfs_size"
          },
          {
            "selected": false,
            "text": "Project#repository_exists?",
            "value": "Project#repository_exists?"
          },
          {
            "selected": false,
            "text": "Project#reset_events_cache",
            "value": "Project#reset_events_cache"
          },
          {
            "selected": false,
            "text": "Project#running_or_pending_build_count",
            "value": "Project#running_or_pending_build_count"
          },
          {
            "selected": false,
            "text": "Project#set_last_activity_at",
            "value": "Project#set_last_activity_at"
          },
          {
            "selected": false,
            "text": "Project#size_limit_enabled?",
            "value": "Project#size_limit_enabled?"
          },
          {
            "selected": false,
            "text": "Project#to_reference",
            "value": "Project#to_reference"
          },
          {
            "selected": false,
            "text": "Project#unarchive!",
            "value": "Project#unarchive!"
          },
          {
            "selected": false,
            "text": "Project#update_forks_visibility_level",
            "value": "Project#update_forks_visibility_level"
          },
          {
            "selected": false,
            "text": "Project#update_mirror",
            "value": "Project#update_mirror"
          },
          {
            "selected": false,
            "text": "Project#update_remote_mirrors",
            "value": "Project#update_remote_mirrors"
          },
          {
            "selected": false,
            "text": "Project#valid_repo?",
            "value": "Project#valid_repo?"
          },
          {
            "selected": false,
            "text": "Project#visibility_level_allowed?",
            "value": "Project#visibility_level_allowed?"
          },
          {
            "selected": false,
            "text": "Project#visibility_level_allowed_as_fork?",
            "value": "Project#visibility_level_allowed_as_fork?"
          },
          {
            "selected": false,
            "text": "Project#visibility_level_allowed_by_group",
            "value": "Project#visibility_level_allowed_by_group"
          },
          {
            "selected": false,
            "text": "Project#visibility_level_allowed_by_group?",
            "value": "Project#visibility_level_allowed_by_group?"
          },
          {
            "selected": false,
            "text": "Project.cached_count",
            "value": "Project.cached_count"
          },
          {
            "selected": true,
            "text": "Project.find_with_namespace",
            "value": "Project.find_with_namespace"
          },
          {
            "selected": false,
            "text": "Project.search",
            "value": "Project.search"
          },
          {
            "selected": false,
            "text": "Project.search_by_title",
            "value": "Project.search_by_title"
          },
          {
            "selected": false,
            "text": "Project.sort",
            "value": "Project.sort"
          },
          {
            "selected": false,
            "text": "Project.trending",
            "value": "Project.trending"
          },
          {
            "selected": false,
            "text": "Project.visible_to_user",
            "value": "Project.visible_to_user"
          },
          {
            "selected": false,
            "text": "Project.where_paths_in",
            "value": "Project.where_paths_in"
          },
          {
            "selected": false,
            "text": "ProjectMember#delete_member_branch_protection",
            "value": "ProjectMember#delete_member_branch_protection"
          },
          {
            "selected": false,
            "text": "ProjectMember#delete_member_todos",
            "value": "ProjectMember#delete_member_todos"
          },
          {
            "selected": false,
            "text": "ProjectMember#post_destroy_hook",
            "value": "ProjectMember#post_destroy_hook"
          },
          {
            "selected": false,
            "text": "ProjectMember#post_update_hook",
            "value": "ProjectMember#post_update_hook"
          },
          {
            "selected": false,
            "text": "ProjectMember.add_users_to_projects",
            "value": "ProjectMember.add_users_to_projects"
          },
          {
            "selected": false,
            "text": "ProjectMember.can_update_member?",
            "value": "ProjectMember.can_update_member?"
          },
          {
            "selected": false,
            "text": "Projects::AutocompleteService#commands",
            "value": "Projects::AutocompleteService#commands"
          },
          {
            "selected": false,
            "text": "Projects::AutocompleteService#issues",
            "value": "Projects::AutocompleteService#issues"
          },
          {
            "selected": false,
            "text": "Projects::AutocompleteService#labels",
            "value": "Projects::AutocompleteService#labels"
          },
          {
            "selected": false,
            "text": "Projects::AutocompleteService#merge_requests",
            "value": "Projects::AutocompleteService#merge_requests"
          },
          {
            "selected": false,
            "text": "Projects::AutocompleteService#milestones",
            "value": "Projects::AutocompleteService#milestones"
          },
          {
            "selected": false,
            "text": "Projects::CreateService#after_create_actions",
            "value": "Projects::CreateService#after_create_actions"
          },
          {
            "selected": false,
            "text": "Projects::CreateService#allowed_fork?",
            "value": "Projects::CreateService#allowed_fork?"
          },
          {
            "selected": false,
            "text": "Projects::CreateService#allowed_namespace?",
            "value": "Projects::CreateService#allowed_namespace?"
          },
          {
            "selected": false,
            "text": "Projects::CreateService#execute",
            "value": "Projects::CreateService#execute"
          },
          {
            "selected": false,
            "text": "Projects::CreateService#fail",
            "value": "Projects::CreateService#fail"
          },
          {
            "selected": false,
            "text": "Projects::CreateService#save_project_and_import_data",
            "value": "Projects::CreateService#save_project_and_import_data"
          },
          {
            "selected": false,
            "text": "Projects::DestroyService#async_execute",
            "value": "Projects::DestroyService#async_execute"
          },
          {
            "selected": false,
            "text": "Projects::EnableDeployKeyService#execute",
            "value": "Projects::EnableDeployKeyService#execute"
          },
          {
            "selected": false,
            "text": "Projects::ForkService#execute",
            "value": "Projects::ForkService#execute"
          },
          {
            "selected": false,
            "text": "Projects::HousekeepingService#execute",
            "value": "Projects::HousekeepingService#execute"
          },
          {
            "selected": false,
            "text": "Projects::HousekeepingService#execute_gitlab_shell_gc",
            "value": "Projects::HousekeepingService#execute_gitlab_shell_gc"
          },
          {
            "selected": false,
            "text": "Projects::HousekeepingService#try_obtain_lease",
            "value": "Projects::HousekeepingService#try_obtain_lease"
          },
          {
            "selected": false,
            "text": "Projects::ParticipantsService#all_members",
            "value": "Projects::ParticipantsService#all_members"
          },
          {
            "selected": false,
            "text": "Projects::ParticipantsService#execute",
            "value": "Projects::ParticipantsService#execute"
          },
          {
            "selected": false,
            "text": "Projects::ParticipantsService#groups",
            "value": "Projects::ParticipantsService#groups"
          },
          {
            "selected": false,
            "text": "Projects::ParticipantsService#noteable_owner",
            "value": "Projects::ParticipantsService#noteable_owner"
          },
          {
            "selected": false,
            "text": "Projects::ParticipantsService#participants_in_noteable",
            "value": "Projects::ParticipantsService#participants_in_noteable"
          },
          {
            "selected": false,
            "text": "Projects::ParticipantsService#sorted",
            "value": "Projects::ParticipantsService#sorted"
          },
          {
            "selected": false,
            "text": "Projects::TransferService#allowed_transfer?",
            "value": "Projects::TransferService#allowed_transfer?"
          },
          {
            "selected": false,
            "text": "Projects::TransferService#execute",
            "value": "Projects::TransferService#execute"
          },
          {
            "selected": false,
            "text": "Projects::TransferService#transfer",
            "value": "Projects::TransferService#transfer"
          },
          {
            "selected": false,
            "text": "Projects::UnlinkForkService#execute",
            "value": "Projects::UnlinkForkService#execute"
          },
          {
            "selected": false,
            "text": "Projects::UpdatePagesConfigurationService#execute",
            "value": "Projects::UpdatePagesConfigurationService#execute"
          },
          {
            "selected": false,
            "text": "Projects::UpdatePagesConfigurationService#pages_config",
            "value": "Projects::UpdatePagesConfigurationService#pages_config"
          },
          {
            "selected": false,
            "text": "Projects::UpdatePagesConfigurationService#pages_domains_config",
            "value": "Projects::UpdatePagesConfigurationService#pages_domains_config"
          },
          {
            "selected": false,
            "text": "Projects::UpdatePagesConfigurationService#reload_daemon",
            "value": "Projects::UpdatePagesConfigurationService#reload_daemon"
          },
          {
            "selected": false,
            "text": "Projects::UpdatePagesConfigurationService#update_file",
            "value": "Projects::UpdatePagesConfigurationService#update_file"
          },
          {
            "selected": false,
            "text": "Projects::UpdateService#execute",
            "value": "Projects::UpdateService#execute"
          },
          {
            "selected": false,
            "text": "Projects::UploadService#execute",
            "value": "Projects::UploadService#execute"
          },
          {
            "selected": false,
            "text": "ProjectsFinder#all_projects",
            "value": "ProjectsFinder#all_projects"
          },
          {
            "selected": false,
            "text": "ProjectsFinder#execute",
            "value": "ProjectsFinder#execute"
          },
          {
            "selected": false,
            "text": "ProtectedBranch.matching",
            "value": "ProtectedBranch.matching"
          },
          {
            "selected": false,
            "text": "ProtectedBranches::CreateService#execute",
            "value": "ProtectedBranches::CreateService#execute"
          },
          {
            "selected": false,
            "text": "ProtectedBranches::UpdateService#execute",
            "value": "ProtectedBranches::UpdateService#execute"
          },
          {
            "selected": false,
            "text": "PushoverService#execute",
            "value": "PushoverService#execute"
          },
          {
            "selected": false,
            "text": "RemoteMirror#add_update_job",
            "value": "RemoteMirror#add_update_job"
          },
          {
            "selected": false,
            "text": "RemoteMirror#remove_remote",
            "value": "RemoteMirror#remove_remote"
          },
          {
            "selected": false,
            "text": "RemoteMirror#reset_fields",
            "value": "RemoteMirror#reset_fields"
          },
          {
            "selected": false,
            "text": "RemoteMirror#sync",
            "value": "RemoteMirror#sync"
          },
          {
            "selected": false,
            "text": "Repository#add_branch",
            "value": "Repository#add_branch"
          },
          {
            "selected": false,
            "text": "Repository#add_remote",
            "value": "Repository#add_remote"
          },
          {
            "selected": false,
            "text": "Repository#add_tag",
            "value": "Repository#add_tag"
          },
          {
            "selected": false,
            "text": "Repository#after_create",
            "value": "Repository#after_create"
          },
          {
            "selected": false,
            "text": "Repository#after_create_branch",
            "value": "Repository#after_create_branch"
          },
          {
            "selected": false,
            "text": "Repository#after_remove_branch",
            "value": "Repository#after_remove_branch"
          },
          {
            "selected": false,
            "text": "Repository#avatar",
            "value": "Repository#avatar"
          },
          {
            "selected": false,
            "text": "Repository#before_change_head",
            "value": "Repository#before_change_head"
          },
          {
            "selected": false,
            "text": "Repository#before_delete",
            "value": "Repository#before_delete"
          },
          {
            "selected": false,
            "text": "Repository#before_remove_branch",
            "value": "Repository#before_remove_branch"
          },
          {
            "selected": false,
            "text": "Repository#blob_at",
            "value": "Repository#blob_at"
          },
          {
            "selected": false,
            "text": "Repository#blob_at_branch",
            "value": "Repository#blob_at_branch"
          },
          {
            "selected": false,
            "text": "Repository#branch_count",
            "value": "Repository#branch_count"
          },
          {
            "selected": false,
            "text": "Repository#branch_exists?",
            "value": "Repository#branch_exists?"
          },
          {
            "selected": false,
            "text": "Repository#branch_names",
            "value": "Repository#branch_names"
          },
          {
            "selected": false,
            "text": "Repository#branch_names_contains",
            "value": "Repository#branch_names_contains"
          },
          {
            "selected": false,
            "text": "Repository#branches",
            "value": "Repository#branches"
          },
          {
            "selected": false,
            "text": "Repository#branches_sorted_by",
            "value": "Repository#branches_sorted_by"
          },
          {
            "selected": false,
            "text": "Repository#cache",
            "value": "Repository#cache"
          },
          {
            "selected": false,
            "text": "Repository#can_be_merged?",
            "value": "Repository#can_be_merged?"
          },
          {
            "selected": false,
            "text": "Repository#changelog",
            "value": "Repository#changelog"
          },
          {
            "selected": false,
            "text": "Repository#check_cherry_pick_content",
            "value": "Repository#check_cherry_pick_content"
          },
          {
            "selected": false,
            "text": "Repository#check_revert_content",
            "value": "Repository#check_revert_content"
          },
          {
            "selected": false,
            "text": "Repository#cherry_pick",
            "value": "Repository#cherry_pick"
          },
          {
            "selected": false,
            "text": "Repository#commit",
            "value": "Repository#commit"
          },
          {
            "selected": false,
            "text": "Repository#commit_dir",
            "value": "Repository#commit_dir"
          },
          {
            "selected": false,
            "text": "Repository#commit_file",
            "value": "Repository#commit_file"
          },
          {
            "selected": false,
            "text": "Repository#commits",
            "value": "Repository#commits"
          },
          {
            "selected": false,
            "text": "Repository#contribution_guide",
            "value": "Repository#contribution_guide"
          },
          {
            "selected": false,
            "text": "Repository#copy_gitattributes",
            "value": "Repository#copy_gitattributes"
          },
          {
            "selected": false,
            "text": "Repository#diff_exists?",
            "value": "Repository#diff_exists?"
          },
          {
            "selected": false,
            "text": "Repository#diverged_from_upstream?",
            "value": "Repository#diverged_from_upstream?"
          },
          {
            "selected": false,
            "text": "Repository#diverging_commit_counts",
            "value": "Repository#diverging_commit_counts"
          },
          {
            "selected": false,
            "text": "Repository#empty?",
            "value": "Repository#empty?"
          },
          {
            "selected": false,
            "text": "Repository#exists?",
            "value": "Repository#exists?"
          },
          {
            "selected": false,
            "text": "Repository#expire_avatar_cache",
            "value": "Repository#expire_avatar_cache"
          },
          {
            "selected": false,
            "text": "Repository#expire_branch_cache",
            "value": "Repository#expire_branch_cache"
          },
          {
            "selected": false,
            "text": "Repository#expire_branch_count_cache",
            "value": "Repository#expire_branch_count_cache"
          },
          {
            "selected": false,
            "text": "Repository#expire_branches_cache",
            "value": "Repository#expire_branches_cache"
          },
          {
            "selected": false,
            "text": "Repository#expire_cache",
            "value": "Repository#expire_cache"
          },
          {
            "selected": false,
            "text": "Repository#expire_emptiness_caches",
            "value": "Repository#expire_emptiness_caches"
          },
          {
            "selected": false,
            "text": "Repository#expire_exists_cache",
            "value": "Repository#expire_exists_cache"
          },
          {
            "selected": false,
            "text": "Repository#expire_has_visible_content_cache",
            "value": "Repository#expire_has_visible_content_cache"
          },
          {
            "selected": false,
            "text": "Repository#expire_root_ref_cache",
            "value": "Repository#expire_root_ref_cache"
          },
          {
            "selected": false,
            "text": "Repository#expire_tag_count_cache",
            "value": "Repository#expire_tag_count_cache"
          },
          {
            "selected": false,
            "text": "Repository#expire_tags_cache",
            "value": "Repository#expire_tags_cache"
          },
          {
            "selected": false,
            "text": "Repository#fetch_ref",
            "value": "Repository#fetch_ref"
          },
          {
            "selected": false,
            "text": "Repository#file_on_head",
            "value": "Repository#file_on_head"
          },
          {
            "selected": false,
            "text": "Repository#find_branch",
            "value": "Repository#find_branch"
          },
          {
            "selected": false,
            "text": "Repository#find_commits_by_message",
            "value": "Repository#find_commits_by_message"
          },
          {
            "selected": false,
            "text": "Repository#find_tag",
            "value": "Repository#find_tag"
          },
          {
            "selected": false,
            "text": "Repository#gitattribute",
            "value": "Repository#gitattribute"
          },
          {
            "selected": false,
            "text": "Repository#gitlab_ci_yml",
            "value": "Repository#gitlab_ci_yml"
          },
          {
            "selected": false,
            "text": "Repository#has_visible_content?",
            "value": "Repository#has_visible_content?"
          },
          {
            "selected": false,
            "text": "Repository#head_commit",
            "value": "Repository#head_commit"
          },
          {
            "selected": false,
            "text": "Repository#head_exists?",
            "value": "Repository#head_exists?"
          },
          {
            "selected": false,
            "text": "Repository#head_tree",
            "value": "Repository#head_tree"
          },
          {
            "selected": false,
            "text": "Repository#initialize",
            "value": "Repository#initialize"
          },
          {
            "selected": false,
            "text": "Repository#is_ancestor?",
            "value": "Repository#is_ancestor?"
          },
          {
            "selected": false,
            "text": "Repository#keep_around",
            "value": "Repository#keep_around"
          },
          {
            "selected": false,
            "text": "Repository#kept_around?",
            "value": "Repository#kept_around?"
          },
          {
            "selected": false,
            "text": "Repository#last_commit_for_path",
            "value": "Repository#last_commit_for_path"
          },
          {
            "selected": false,
            "text": "Repository#license_blob",
            "value": "Repository#license_blob"
          },
          {
            "selected": false,
            "text": "Repository#license_key",
            "value": "Repository#license_key"
          },
          {
            "selected": false,
            "text": "Repository#lookup_cache",
            "value": "Repository#lookup_cache"
          },
          {
            "selected": false,
            "text": "Repository#ls_files",
            "value": "Repository#ls_files"
          },
          {
            "selected": false,
            "text": "Repository#merge_base",
            "value": "Repository#merge_base"
          },
          {
            "selected": false,
            "text": "Repository#merged_to_root_ref?",
            "value": "Repository#merged_to_root_ref?"
          },
          {
            "selected": false,
            "text": "Repository#method_missing",
            "value": "Repository#method_missing"
          },
          {
            "selected": false,
            "text": "Repository#next_branch",
            "value": "Repository#next_branch"
          },
          {
            "selected": false,
            "text": "Repository#path_to_repo",
            "value": "Repository#path_to_repo"
          },
          {
            "selected": false,
            "text": "Repository#path_with_namespace",
            "value": "Repository#path_with_namespace"
          },
          {
            "selected": false,
            "text": "Repository#raw_repository",
            "value": "Repository#raw_repository"
          },
          {
            "selected": false,
            "text": "Repository#readme",
            "value": "Repository#readme"
          },
          {
            "selected": false,
            "text": "Repository#ref_exists?",
            "value": "Repository#ref_exists?"
          },
          {
            "selected": false,
            "text": "Repository#ref_names",
            "value": "Repository#ref_names"
          },
          {
            "selected": false,
            "text": "Repository#refs_contains_sha",
            "value": "Repository#refs_contains_sha"
          },
          {
            "selected": false,
            "text": "Repository#remove_file",
            "value": "Repository#remove_file"
          },
          {
            "selected": false,
            "text": "Repository#remove_remote",
            "value": "Repository#remove_remote"
          },
          {
            "selected": false,
            "text": "Repository#resolve_conflicts",
            "value": "Repository#resolve_conflicts"
          },
          {
            "selected": false,
            "text": "Repository#revert",
            "value": "Repository#revert"
          },
          {
            "selected": false,
            "text": "Repository#rm_branch",
            "value": "Repository#rm_branch"
          },
          {
            "selected": false,
            "text": "Repository#rm_tag",
            "value": "Repository#rm_tag"
          },
          {
            "selected": false,
            "text": "Repository#root_ref",
            "value": "Repository#root_ref"
          },
          {
            "selected": false,
            "text": "Repository#search_files",
            "value": "Repository#search_files"
          },
          {
            "selected": false,
            "text": "Repository#storage_path",
            "value": "Repository#storage_path"
          },
          {
            "selected": false,
            "text": "Repository#submodule_url_for",
            "value": "Repository#submodule_url_for"
          },
          {
            "selected": false,
            "text": "Repository#tag_count",
            "value": "Repository#tag_count"
          },
          {
            "selected": false,
            "text": "Repository#tag_names",
            "value": "Repository#tag_names"
          },
          {
            "selected": false,
            "text": "Repository#tag_names_contains",
            "value": "Repository#tag_names_contains"
          },
          {
            "selected": false,
            "text": "Repository#tags",
            "value": "Repository#tags"
          },
          {
            "selected": false,
            "text": "Repository#tags_sorted_by",
            "value": "Repository#tags_sorted_by"
          },
          {
            "selected": false,
            "text": "Repository#tags_sorted_by_committed_date",
            "value": "Repository#tags_sorted_by_committed_date"
          },
          {
            "selected": false,
            "text": "Repository#tree",
            "value": "Repository#tree"
          },
          {
            "selected": false,
            "text": "Repository#up_to_date_with_upstream?",
            "value": "Repository#up_to_date_with_upstream?"
          },
          {
            "selected": false,
            "text": "Repository#update_autocrlf_option",
            "value": "Repository#update_autocrlf_option"
          },
          {
            "selected": false,
            "text": "Repository#update_branch_with_hooks",
            "value": "Repository#update_branch_with_hooks"
          },
          {
            "selected": false,
            "text": "Repository#update_file",
            "value": "Repository#update_file"
          },
          {
            "selected": false,
            "text": "Repository#update_ref!",
            "value": "Repository#update_ref!"
          },
          {
            "selected": false,
            "text": "Rinku.auto_link",
            "value": "Rinku.auto_link"
          },
          {
            "selected": false,
            "text": "Rouge::Formatters::HTMLGitlab#stream",
            "value": "Rouge::Formatters::HTMLGitlab#stream"
          },
          {
            "selected": false,
            "text": "Rugged::Blob#content",
            "value": "Rugged::Blob#content"
          },
          {
            "selected": false,
            "text": "Rugged::Blob.to_buffer",
            "value": "Rugged::Blob.to_buffer"
          },
          {
            "selected": false,
            "text": "Rugged::Branch#name",
            "value": "Rugged::Branch#name"
          },
          {
            "selected": false,
            "text": "Rugged::BranchCollection#[]",
            "value": "Rugged::BranchCollection#[]"
          },
          {
            "selected": false,
            "text": "Rugged::BranchCollection#each",
            "value": "Rugged::BranchCollection#each"
          },
          {
            "selected": false,
            "text": "Rugged::Commit#author",
            "value": "Rugged::Commit#author"
          },
          {
            "selected": false,
            "text": "Rugged::Commit#committer",
            "value": "Rugged::Commit#committer"
          },
          {
            "selected": false,
            "text": "Rugged::Commit#diff",
            "value": "Rugged::Commit#diff"
          },
          {
            "selected": false,
            "text": "Rugged::Commit#inspect",
            "value": "Rugged::Commit#inspect"
          },
          {
            "selected": false,
            "text": "Rugged::Commit#message",
            "value": "Rugged::Commit#message"
          },
          {
            "selected": false,
            "text": "Rugged::Commit#parents",
            "value": "Rugged::Commit#parents"
          },
          {
            "selected": false,
            "text": "Rugged::Commit#to_mbox",
            "value": "Rugged::Commit#to_mbox"
          },
          {
            "selected": false,
            "text": "Rugged::Commit#tree",
            "value": "Rugged::Commit#tree"
          },
          {
            "selected": false,
            "text": "Rugged::Commit.create",
            "value": "Rugged::Commit.create"
          },
          {
            "selected": false,
            "text": "Rugged::Diff#each",
            "value": "Rugged::Diff#each"
          },
          {
            "selected": false,
            "text": "Rugged::Diff#each_delta",
            "value": "Rugged::Diff#each_delta"
          },
          {
            "selected": false,
            "text": "Rugged::Diff#each_patch",
            "value": "Rugged::Diff#each_patch"
          },
          {
            "selected": false,
            "text": "Rugged::Diff#find_similar!",
            "value": "Rugged::Diff#find_similar!"
          },
          {
            "selected": false,
            "text": "Rugged::Diff#patch",
            "value": "Rugged::Diff#patch"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#branches",
            "value": "Rugged::Repository#branches"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#cherrypick_commit",
            "value": "Rugged::Repository#cherrypick_commit"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#diff",
            "value": "Rugged::Repository#diff"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#empty?",
            "value": "Rugged::Repository#empty?"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#fetch_attributes",
            "value": "Rugged::Repository#fetch_attributes"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#head",
            "value": "Rugged::Repository#head"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#head_unborn?",
            "value": "Rugged::Repository#head_unborn?"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#include?",
            "value": "Rugged::Repository#include?"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#index",
            "value": "Rugged::Repository#index"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#inspect",
            "value": "Rugged::Repository#inspect"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#last_commit",
            "value": "Rugged::Repository#last_commit"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#lookup",
            "value": "Rugged::Repository#lookup"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#merge_base",
            "value": "Rugged::Repository#merge_base"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#merge_commits",
            "value": "Rugged::Repository#merge_commits"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#path",
            "value": "Rugged::Repository#path"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#ref",
            "value": "Rugged::Repository#ref"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#references",
            "value": "Rugged::Repository#references"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#rev_parse",
            "value": "Rugged::Repository#rev_parse"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#rev_parse_oid",
            "value": "Rugged::Repository#rev_parse_oid"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#revert_commit",
            "value": "Rugged::Repository#revert_commit"
          },
          {
            "selected": false,
            "text": "Rugged::Repository#write",
            "value": "Rugged::Repository#write"
          },
          {
            "selected": false,
            "text": "Rugged::Repository.new",
            "value": "Rugged::Repository.new"
          },
          {
            "selected": false,
            "text": "Rugged::Tag#name",
            "value": "Rugged::Tag#name"
          },
          {
            "selected": false,
            "text": "Rugged::TagCollection#create",
            "value": "Rugged::TagCollection#create"
          },
          {
            "selected": false,
            "text": "Rugged::TagCollection#delete",
            "value": "Rugged::TagCollection#delete"
          },
          {
            "selected": false,
            "text": "Rugged::TagCollection#each",
            "value": "Rugged::TagCollection#each"
          },
          {
            "selected": false,
            "text": "Rugged::Tree#[]",
            "value": "Rugged::Tree#[]"
          },
          {
            "selected": false,
            "text": "Rugged::Tree#count_recursive",
            "value": "Rugged::Tree#count_recursive"
          },
          {
            "selected": false,
            "text": "Rugged::Tree#diff",
            "value": "Rugged::Tree#diff"
          },
          {
            "selected": false,
            "text": "Rugged::Tree#each",
            "value": "Rugged::Tree#each"
          },
          {
            "selected": false,
            "text": "Rugged::Tree#each_blob",
            "value": "Rugged::Tree#each_blob"
          },
          {
            "selected": false,
            "text": "Rugged::Tree#inspect",
            "value": "Rugged::Tree#inspect"
          },
          {
            "selected": false,
            "text": "Rugged::Tree#path",
            "value": "Rugged::Tree#path"
          },
          {
            "selected": false,
            "text": "Rugged::Tree#walk",
            "value": "Rugged::Tree#walk"
          },
          {
            "selected": false,
            "text": "Rugged::Tree.diff",
            "value": "Rugged::Tree.diff"
          },
          {
            "selected": false,
            "text": "Search::GlobalService#execute",
            "value": "Search::GlobalService#execute"
          },
          {
            "selected": false,
            "text": "Search::ProjectService#execute",
            "value": "Search::ProjectService#execute"
          },
          {
            "selected": false,
            "text": "Search::SnippetService#execute",
            "value": "Search::SnippetService#execute"
          },
          {
            "selected": false,
            "text": "SentNotification.for",
            "value": "SentNotification.for"
          },
          {
            "selected": false,
            "text": "Service#cache_project_has_external_issue_tracker",
            "value": "Service#cache_project_has_external_issue_tracker"
          },
          {
            "selected": false,
            "text": "Service#cache_project_has_external_wiki",
            "value": "Service#cache_project_has_external_wiki"
          },
          {
            "selected": false,
            "text": "Service.create_from_template",
            "value": "Service.create_from_template"
          },
          {
            "selected": false,
            "text": "Service.prop_accessor",
            "value": "Service.prop_accessor"
          },
          {
            "selected": false,
            "text": "SlackService#event_field",
            "value": "SlackService#event_field"
          },
          {
            "selected": false,
            "text": "SlackService#execute",
            "value": "SlackService#execute"
          },
          {
            "selected": false,
            "text": "SlashCommands::InterpretService#execute",
            "value": "SlashCommands::InterpretService#execute"
          },
          {
            "selected": false,
            "text": "SlashCommands::InterpretService#extract_references",
            "value": "SlashCommands::InterpretService#extract_references"
          },
          {
            "selected": false,
            "text": "SlashCommands::InterpretService#find_label_ids",
            "value": "SlashCommands::InterpretService#find_label_ids"
          },
          {
            "selected": false,
            "text": "Snippet#no_highlighting?",
            "value": "Snippet#no_highlighting?"
          },
          {
            "selected": false,
            "text": "Snippet.accessible_to",
            "value": "Snippet.accessible_to"
          },
          {
            "selected": false,
            "text": "SnippetsFinder#by_project",
            "value": "SnippetsFinder#by_project"
          },
          {
            "selected": false,
            "text": "SnippetsFinder#by_user",
            "value": "SnippetsFinder#by_user"
          },
          {
            "selected": false,
            "text": "SnippetsFinder#execute",
            "value": "SnippetsFinder#execute"
          },
          {
            "selected": false,
            "text": "SpamService#akismet",
            "value": "SpamService#akismet"
          },
          {
            "selected": false,
            "text": "SpamService#check",
            "value": "SpamService#check"
          },
          {
            "selected": false,
            "text": "SpamService#create_spam_log",
            "value": "SpamService#create_spam_log"
          },
          {
            "selected": false,
            "text": "SpamService#initialize",
            "value": "SpamService#initialize"
          },
          {
            "selected": false,
            "text": "SpamService#spammable_owner",
            "value": "SpamService#spammable_owner"
          },
          {
            "selected": false,
            "text": "SystemHooksService#build_event_data",
            "value": "SystemHooksService#build_event_data"
          },
          {
            "selected": false,
            "text": "SystemHooksService#execute_hooks",
            "value": "SystemHooksService#execute_hooks"
          },
          {
            "selected": false,
            "text": "SystemHooksService#execute_hooks_for",
            "value": "SystemHooksService#execute_hooks_for"
          },
          {
            "selected": false,
            "text": "SystemHooksService#group_member_data",
            "value": "SystemHooksService#group_member_data"
          },
          {
            "selected": false,
            "text": "SystemHooksService#project_data",
            "value": "SystemHooksService#project_data"
          },
          {
            "selected": false,
            "text": "SystemHooksService#project_member_data",
            "value": "SystemHooksService#project_member_data"
          },
          {
            "selected": false,
            "text": "SystemNoteService.resolve_all_discussions",
            "value": "SystemNoteService.resolve_all_discussions"
          },
          {
            "selected": false,
            "text": "TagsFinder#execute",
            "value": "TagsFinder#execute"
          },
          {
            "selected": false,
            "text": "TagsFinder#filter_by_name",
            "value": "TagsFinder#filter_by_name"
          },
          {
            "selected": false,
            "text": "TagsFinder#search",
            "value": "TagsFinder#search"
          },
          {
            "selected": false,
            "text": "TeamcityService#build_page",
            "value": "TeamcityService#build_page"
          },
          {
            "selected": false,
            "text": "TestHookService#execute",
            "value": "TestHookService#execute"
          },
          {
            "selected": false,
            "text": "TodoService#add_merge_request_approvers",
            "value": "TodoService#add_merge_request_approvers"
          },
          {
            "selected": false,
            "text": "TodoService#attributes_for_target",
            "value": "TodoService#attributes_for_target"
          },
          {
            "selected": false,
            "text": "TodoService#attributes_for_todo",
            "value": "TodoService#attributes_for_todo"
          },
          {
            "selected": false,
            "text": "TodoService#close_issue",
            "value": "TodoService#close_issue"
          },
          {
            "selected": false,
            "text": "TodoService#close_merge_request",
            "value": "TodoService#close_merge_request"
          },
          {
            "selected": false,
            "text": "TodoService#create_approval_required_todos",
            "value": "TodoService#create_approval_required_todos"
          },
          {
            "selected": false,
            "text": "TodoService#create_assignment_todo",
            "value": "TodoService#create_assignment_todo"
          },
          {
            "selected": false,
            "text": "TodoService#create_mention_todos",
            "value": "TodoService#create_mention_todos"
          },
          {
            "selected": false,
            "text": "TodoService#create_todos",
            "value": "TodoService#create_todos"
          },
          {
            "selected": false,
            "text": "TodoService#destroy_issuable",
            "value": "TodoService#destroy_issuable"
          },
          {
            "selected": false,
            "text": "TodoService#destroy_issue",
            "value": "TodoService#destroy_issue"
          },
          {
            "selected": false,
            "text": "TodoService#destroy_merge_request",
            "value": "TodoService#destroy_merge_request"
          },
          {
            "selected": false,
            "text": "TodoService#filter_mentioned_users",
            "value": "TodoService#filter_mentioned_users"
          },
          {
            "selected": false,
            "text": "TodoService#handle_note",
            "value": "TodoService#handle_note"
          },
          {
            "selected": false,
            "text": "TodoService#mark_pending_todos_as_done",
            "value": "TodoService#mark_pending_todos_as_done"
          },
          {
            "selected": false,
            "text": "TodoService#mark_todo",
            "value": "TodoService#mark_todo"
          },
          {
            "selected": false,
            "text": "TodoService#mark_todos_as_done",
            "value": "TodoService#mark_todos_as_done"
          },
          {
            "selected": false,
            "text": "TodoService#mark_todos_as_done_by_ids",
            "value": "TodoService#mark_todos_as_done_by_ids"
          },
          {
            "selected": false,
            "text": "TodoService#merge_merge_request",
            "value": "TodoService#merge_merge_request"
          },
          {
            "selected": false,
            "text": "TodoService#merge_request_build_retried",
            "value": "TodoService#merge_request_build_retried"
          },
          {
            "selected": false,
            "text": "TodoService#new_award_emoji",
            "value": "TodoService#new_award_emoji"
          },
          {
            "selected": false,
            "text": "TodoService#new_issuable",
            "value": "TodoService#new_issuable"
          },
          {
            "selected": false,
            "text": "TodoService#new_issue",
            "value": "TodoService#new_issue"
          },
          {
            "selected": false,
            "text": "TodoService#new_merge_request",
            "value": "TodoService#new_merge_request"
          },
          {
            "selected": false,
            "text": "TodoService#new_note",
            "value": "TodoService#new_note"
          },
          {
            "selected": false,
            "text": "TodoService#pending_todos",
            "value": "TodoService#pending_todos"
          },
          {
            "selected": false,
            "text": "TodoService#reassigned_issue",
            "value": "TodoService#reassigned_issue"
          },
          {
            "selected": false,
            "text": "TodoService#reassigned_merge_request",
            "value": "TodoService#reassigned_merge_request"
          },
          {
            "selected": false,
            "text": "TodoService#reject_users_without_access",
            "value": "TodoService#reject_users_without_access"
          },
          {
            "selected": false,
            "text": "TodoService#select_users",
            "value": "TodoService#select_users"
          },
          {
            "selected": false,
            "text": "TodoService#todo_exist?",
            "value": "TodoService#todo_exist?"
          },
          {
            "selected": false,
            "text": "TodoService#toggling_tasks?",
            "value": "TodoService#toggling_tasks?"
          },
          {
            "selected": false,
            "text": "TodoService#update_issuable",
            "value": "TodoService#update_issuable"
          },
          {
            "selected": false,
            "text": "TodoService#update_issue",
            "value": "TodoService#update_issue"
          },
          {
            "selected": false,
            "text": "TodoService#update_merge_request",
            "value": "TodoService#update_merge_request"
          },
          {
            "selected": false,
            "text": "TodoService#update_note",
            "value": "TodoService#update_note"
          },
          {
            "selected": false,
            "text": "TodosFinder#action?",
            "value": "TodosFinder#action?"
          },
          {
            "selected": false,
            "text": "TodosFinder#action_id?",
            "value": "TodosFinder#action_id?"
          },
          {
            "selected": false,
            "text": "TodosFinder#by_action",
            "value": "TodosFinder#by_action"
          },
          {
            "selected": false,
            "text": "TodosFinder#by_action_id",
            "value": "TodosFinder#by_action_id"
          },
          {
            "selected": false,
            "text": "TodosFinder#by_project",
            "value": "TodosFinder#by_project"
          },
          {
            "selected": false,
            "text": "TodosFinder#by_state",
            "value": "TodosFinder#by_state"
          },
          {
            "selected": false,
            "text": "TodosFinder#by_type",
            "value": "TodosFinder#by_type"
          },
          {
            "selected": false,
            "text": "TodosFinder#execute",
            "value": "TodosFinder#execute"
          },
          {
            "selected": false,
            "text": "TodosFinder#initialize",
            "value": "TodosFinder#initialize"
          },
          {
            "selected": false,
            "text": "TodosFinder#project",
            "value": "TodosFinder#project"
          },
          {
            "selected": false,
            "text": "TodosFinder#projects",
            "value": "TodosFinder#projects"
          },
          {
            "selected": false,
            "text": "TodosFinder#sort",
            "value": "TodosFinder#sort"
          },
          {
            "selected": false,
            "text": "TodosFinder#type?",
            "value": "TodosFinder#type?"
          },
          {
            "selected": false,
            "text": "TrendingProjectsFinder#execute",
            "value": "TrendingProjectsFinder#execute"
          },
          {
            "selected": false,
            "text": "TrendingProjectsFinder#projects_for",
            "value": "TrendingProjectsFinder#projects_for"
          },
          {
            "selected": false,
            "text": "U2fRegistration.authenticate",
            "value": "U2fRegistration.authenticate"
          },
          {
            "selected": false,
            "text": "U2fRegistration.register",
            "value": "U2fRegistration.register"
          },
          {
            "selected": false,
            "text": "UnionFinder#find_union",
            "value": "UnionFinder#find_union"
          },
          {
            "selected": false,
            "text": "UpdateSnippetService#execute",
            "value": "UpdateSnippetService#execute"
          },
          {
            "selected": false,
            "text": "User#accessible_deploy_keys",
            "value": "User#accessible_deploy_keys"
          },
          {
            "selected": false,
            "text": "User#assigned_open_issues_count",
            "value": "User#assigned_open_issues_count"
          },
          {
            "selected": false,
            "text": "User#assigned_open_merge_request_count",
            "value": "User#assigned_open_merge_request_count"
          },
          {
            "selected": false,
            "text": "User#authorized_groups",
            "value": "User#authorized_groups"
          },
          {
            "selected": false,
            "text": "User#authorized_projects",
            "value": "User#authorized_projects"
          },
          {
            "selected": false,
            "text": "User#can_be_removed?",
            "value": "User#can_be_removed?"
          },
          {
            "selected": false,
            "text": "User#can_create_group?",
            "value": "User#can_create_group?"
          },
          {
            "selected": false,
            "text": "User#can_create_project?",
            "value": "User#can_create_project?"
          },
          {
            "selected": false,
            "text": "User#can_select_namespace?",
            "value": "User#can_select_namespace?"
          },
          {
            "selected": false,
            "text": "User#ci_authorized_runners",
            "value": "User#ci_authorized_runners"
          },
          {
            "selected": false,
            "text": "User#ci_projects_union",
            "value": "User#ci_projects_union"
          },
          {
            "selected": false,
            "text": "User#contributed_projects",
            "value": "User#contributed_projects"
          },
          {
            "selected": false,
            "text": "User#disable_two_factor!",
            "value": "User#disable_two_factor!"
          },
          {
            "selected": false,
            "text": "User#domain_matches?",
            "value": "User#domain_matches?"
          },
          {
            "selected": false,
            "text": "User#ensure_external_user_rights",
            "value": "User#ensure_external_user_rights"
          },
          {
            "selected": false,
            "text": "User#ensure_namespace_correct",
            "value": "User#ensure_namespace_correct"
          },
          {
            "selected": false,
            "text": "User#fork_of",
            "value": "User#fork_of"
          },
          {
            "selected": false,
            "text": "User#global_notification_setting",
            "value": "User#global_notification_setting"
          },
          {
            "selected": false,
            "text": "User#increment_failed_attempts!",
            "value": "User#increment_failed_attempts!"
          },
          {
            "selected": false,
            "text": "User#ldap_user?",
            "value": "User#ldap_user?"
          },
          {
            "selected": false,
            "text": "User#manageable_namespaces",
            "value": "User#manageable_namespaces"
          },
          {
            "selected": false,
            "text": "User#namespace_uniq",
            "value": "User#namespace_uniq"
          },
          {
            "selected": false,
            "text": "User#notification_settings_for",
            "value": "User#notification_settings_for"
          },
          {
            "selected": false,
            "text": "User#oauth_authorized_tokens",
            "value": "User#oauth_authorized_tokens"
          },
          {
            "selected": false,
            "text": "User#post_destroy_hook",
            "value": "User#post_destroy_hook"
          },
          {
            "selected": false,
            "text": "User#project_deploy_keys",
            "value": "User#project_deploy_keys"
          },
          {
            "selected": false,
            "text": "User#projects_limit_left",
            "value": "User#projects_limit_left"
          },
          {
            "selected": false,
            "text": "User#projects_union",
            "value": "User#projects_union"
          },
          {
            "selected": false,
            "text": "User#projects_where_can_admin_issues",
            "value": "User#projects_where_can_admin_issues"
          },
          {
            "selected": false,
            "text": "User#recent_push",
            "value": "User#recent_push"
          },
          {
            "selected": false,
            "text": "User#require_ssh_key?",
            "value": "User#require_ssh_key?"
          },
          {
            "selected": false,
            "text": "User#requires_ldap_check?",
            "value": "User#requires_ldap_check?"
          },
          {
            "selected": false,
            "text": "User#reset_events_cache",
            "value": "User#reset_events_cache"
          },
          {
            "selected": false,
            "text": "User#set_projects_limit",
            "value": "User#set_projects_limit"
          },
          {
            "selected": false,
            "text": "User#several_namespaces?",
            "value": "User#several_namespaces?"
          },
          {
            "selected": false,
            "text": "User#signup_domain_valid?",
            "value": "User#signup_domain_valid?"
          },
          {
            "selected": false,
            "text": "User#solo_owned_groups",
            "value": "User#solo_owned_groups"
          },
          {
            "selected": false,
            "text": "User#starred?",
            "value": "User#starred?"
          },
          {
            "selected": false,
            "text": "User#to_reference",
            "value": "User#to_reference"
          },
          {
            "selected": false,
            "text": "User#todos_done_count",
            "value": "User#todos_done_count"
          },
          {
            "selected": false,
            "text": "User#todos_pending_count",
            "value": "User#todos_pending_count"
          },
          {
            "selected": false,
            "text": "User#toggle_star",
            "value": "User#toggle_star"
          },
          {
            "selected": false,
            "text": "User#two_factor_u2f_enabled?",
            "value": "User#two_factor_u2f_enabled?"
          },
          {
            "selected": false,
            "text": "User#unique_email",
            "value": "User#unique_email"
          },
          {
            "selected": false,
            "text": "User#update_cache_counts",
            "value": "User#update_cache_counts"
          },
          {
            "selected": false,
            "text": "User#update_emails_with_primary_email",
            "value": "User#update_emails_with_primary_email"
          },
          {
            "selected": false,
            "text": "User#update_secondary_emails!",
            "value": "User#update_secondary_emails!"
          },
          {
            "selected": false,
            "text": "User#update_todos_count_cache",
            "value": "User#update_todos_count_cache"
          },
          {
            "selected": false,
            "text": "User#viewable_starred_projects",
            "value": "User#viewable_starred_projects"
          },
          {
            "selected": false,
            "text": "User.by_login",
            "value": "User.by_login"
          },
          {
            "selected": false,
            "text": "User.find_by_any_email",
            "value": "User.find_by_any_email"
          },
          {
            "selected": false,
            "text": "User.find_by_authentication_token",
            "value": "User.find_by_authentication_token"
          },
          {
            "selected": false,
            "text": "User.find_by_personal_access_token",
            "value": "User.find_by_personal_access_token"
          },
          {
            "selected": false,
            "text": "User.find_by_username!",
            "value": "User.find_by_username!"
          },
          {
            "selected": false,
            "text": "User.find_for_database_authentication",
            "value": "User.find_for_database_authentication"
          },
          {
            "selected": false,
            "text": "User.search",
            "value": "User.search"
          },
          {
            "selected": false,
            "text": "UserAgentDetailService#create",
            "value": "UserAgentDetailService#create"
          },
          {
            "selected": false,
            "text": "WikiPages::BaseService#execute_hooks",
            "value": "WikiPages::BaseService#execute_hooks"
          },
          {
            "selected": false,
            "text": "WikiPages::BaseService#hook_data",
            "value": "WikiPages::BaseService#hook_data"
          },
          {
            "selected": false,
            "text": "WikiPages::CreateService#execute",
            "value": "WikiPages::CreateService#execute"
          },
          {
            "selected": false,
            "text": "WikiPages::UpdateService#execute",
            "value": "WikiPages::UpdateService#execute"
          }
        ],
        "query": "show tag values from gitlab.downsampled.rails_method_call_timings_per_method with key = \"method\"",
        "refresh": 1,
        "regex": "/#|\\./",
        "type": "query"
      },
      {
        "current": {
          "text": "Production",
          "value": "Production"
        },
        "datasource": null,
        "hide": 0,
        "includeAll": false,
        "label": "Database",
        "multi": false,
        "name": "database",
        "options": [
          {
            "selected": false,
            "text": "InfluxDB Internal",
            "value": "InfluxDB Internal"
          },
          {
            "selected": true,
            "text": "Production",
            "value": "Production"
          },
          {
            "selected": false,
            "text": "Staging",
            "value": "Staging"
          },
          {
            "selected": false,
            "text": "default",
            "value": "default"
          },
          {
            "selected": false,
            "text": "dev.gitlab.org",
            "value": "dev.gitlab.org"
          }
        ],
        "query": "influxdb",
        "refresh": 1,
        "regex": "",
        "type": "datasource"
      }
    ]
  },
  "time": {
    "from": "now-3h",
    "to": "now"
  },
  "timepicker": {
    "now": true,
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "utc",
  "title": "Method Call Timings",
  "version": 2
}